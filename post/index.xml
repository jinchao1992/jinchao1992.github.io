<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 靳超的Github Page</title>
    <link>https://jinchao1992.github.io/post/</link>
    <description>Recent content in Posts on 靳超的Github Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>All rights reserved - 2019</copyright>
    <lastBuildDate>Sat, 07 Sep 2019 17:43:43 +0800</lastBuildDate>
    
	<atom:link href="https://jinchao1992.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS 层叠上下文</title>
      <link>https://jinchao1992.github.io/post/css-%E5%B1%82%E5%8F%A0%E4%B8%8A%E4%B8%8B%E6%96%87/</link>
      <pubDate>Sat, 07 Sep 2019 17:43:43 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/css-%E5%B1%82%E5%8F%A0%E4%B8%8A%E4%B8%8B%E6%96%87/</guid>
      <description>前言 思考一个小问题，布局与定位的区别？
我们可能认为布局里面也是包含定位的，因为布局时一个个小模块组合在一块的，而定位也是把一个模块通过定位的方式放在一个模块里。其实不然，布局是相对于屏幕平面上的，而定位是垂直于屏幕上的。 那么这是什么意思呢？里面有涉及哪些概念呢？下面一起看看吧！
div的分层 之前我们有提到过盒模型的概念，如下图：
假如给内容区一个背景，那么背景的范围是从哪里开始的呢？通过一个 验证demo 可以得出背景色的区域是 border 外边沿围城的区域。那么通过这个例子可以知道一个模块的背景色是低于一个模块的 border 的，模块的具体分层是什么样子呢？如下图所示：</description>
    </item>
    
    <item>
      <title>URL 浅析</title>
      <link>https://jinchao1992.github.io/post/url-%E6%B5%85%E6%9E%90/</link>
      <pubDate>Thu, 05 Sep 2019 21:29:11 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/url-%E6%B5%85%E6%9E%90/</guid>
      <description>URL（Uniform Resource Locator）统一资源定位符。由 蒂姆·伯纳斯-李 发明。它包含以下几个方面：
 传送协议； 域名或IP； 端口； 路径； 查询参数； 锚点；  示例图：</description>
    </item>
    
    <item>
      <title>Css 全解</title>
      <link>https://jinchao1992.github.io/post/css%E5%85%A8%E8%A7%A3/</link>
      <pubDate>Tue, 27 Aug 2019 23:40:47 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/css%E5%85%A8%E8%A7%A3/</guid>
      <description>CSS 全解 如果我们把 HTML 理解为一栋房子的主体结构（毛坯房），那么 CSS 就是我们用来装修房子的材料，我们可以用 CSS 装修出各种华丽、大体、美观的房子（网页）。所以 CSS 对于前端开发者来说也是必不可缺的一项软技能了，学好 CSS 就显得尤为重要了。废话不多说一起来看看 CSS 的一些重要知识点吧。</description>
    </item>
    
    <item>
      <title>HTML 常用标签</title>
      <link>https://jinchao1992.github.io/post/html-%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Thu, 22 Aug 2019 23:01:15 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/html-%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>前言 最新的 HTML5 里标签大概有 110 个，但是如果让我们学完 110 个的话，对于大多数人来说可能还是比较困难的。工作中常用的也就那么几个，接下来我们介绍下几个常用的 HTML 标签。</description>
    </item>
    
    <item>
      <title>HTML 入门笔记1</title>
      <link>https://jinchao1992.github.io/post/html-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Sun, 18 Aug 2019 16:41:46 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/html-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description>HTML（英语：HyperText Markup Language）超文本编辑语言。由万维网联盟（W3C）负责维护，于1990年诞生，作者是：Time Berners-Lee（蒂姆·伯纳斯-李）, 也可称为”李爵士“。是整个网页的基础，是学好前端必备的一大知识模块，学好 HTML 非常重要，并且我们要学会使用*语义化的标签来书写 HTML 标签。</description>
    </item>
    
    <item>
      <title>CSS Margin 布局技巧</title>
      <link>https://jinchao1992.github.io/post/css-margin-%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sun, 11 Aug 2019 14:28:00 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/css-margin-%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/</guid>
      <description>前言 CSS 里有一个重要的东西，叫 CSS 盒模型，它几乎能贯穿我们学习 CSS 的整个阶段，如下图所示，就是我们所说的盒子模型：
(注：图片来源 MDN )</description>
    </item>
    
    <item>
      <title>CSS以及常见的布局方式</title>
      <link>https://jinchao1992.github.io/post/css%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%9A%84%E5%B8%83%E5%B1%80%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sun, 11 Aug 2019 14:26:53 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/css%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%9A%84%E5%B8%83%E5%B1%80%E6%96%B9%E5%BC%8F/</guid>
      <description>CSS是什么？ CSS，层叠样式表(英语：Cascading Style Sheets)，是一种用来为结构化文档 (如：HTML文档) 添加样式 (字体、颜色、间距等) 的计算机语言，由 W3C 定义和维护。当前最新的版本是 CSS2.</description>
    </item>
    
    <item>
      <title>HTML 是什么</title>
      <link>https://jinchao1992.github.io/post/html-%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Sun, 11 Aug 2019 14:25:39 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/html-%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>HTML (英语：HyperText Markup Language) 超文本编辑语言，是整个网站的基石，所以学好 HTML 非常重要，并且我们要学会使用 语义化的标签来书写 HTML 标签，接下来我们来一一介绍 HTML 标签。</description>
    </item>
    
    <item>
      <title>互联网的基石 HTTP入门</title>
      <link>https://jinchao1992.github.io/post/%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E5%9F%BA%E7%9F%B3-http%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 11 Aug 2019 14:24:02 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E5%9F%BA%E7%9F%B3-http%E5%85%A5%E9%97%A8/</guid>
      <description>互联网的基石 www 的历史 WWW 全称 World Wide Web 翻译成中文则是 全世界范围网络。</description>
    </item>
    
    <item>
      <title>常用的git命令</title>
      <link>https://jinchao1992.github.io/post/%E5%B8%B8%E7%94%A8%E7%9A%84git%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 11 Aug 2019 14:22:56 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E5%B8%B8%E7%94%A8%E7%9A%84git%E5%91%BD%E4%BB%A4/</guid>
      <description>在工作中，经常用到 git , 不管托管在 gitHub 还是 gitLab 或者 码云，平时都是用可视化工具进行提交、推送，并没有用太多的命令进行操作。作为一个程序员，当然要学会用命令做东西啦，简单的记录下 git 日常命令，如果需要了解更多，请点击文章最下方链接进行访问。</description>
    </item>
    
    <item>
      <title>什么是脚本</title>
      <link>https://jinchao1992.github.io/post/%E4%BB%80%E4%B9%88%E6%98%AF%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Sun, 11 Aug 2019 14:22:13 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E4%BB%80%E4%B9%88%E6%98%AF%E8%84%9A%E6%9C%AC/</guid>
      <description>什么是脚本？ 从一开始学代码时，就有同学跟我说，「我今晚要写个脚本，然后实现一个什么东西。。。」，当时的我一脸懵逼，今天通过一个小小的例子来简单的认识下脚本；
我们通常把 Javascript 语言也叫做 「脚本语言」，所谓脚本其实就是，我们给计算机设置好一定的命令和程序，计算机按照我们所说的进行输出，这就是一个脚本。例如：
cd ~/Desktop mkdir test cd test echo &#39;您好&#39; &amp;gt; txt.</description>
    </item>
    
    <item>
      <title>命令行的基本操作</title>
      <link>https://jinchao1992.github.io/post/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 11 Aug 2019 14:21:23 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>命令行基本操作 在进行命令行操作之前，先认识几个单词：
   英文 中文 命令简写     file 文件 file   make 制作 mk   remove 删除 rm   move 移动 mv   copy 复制 cp   list 列表 ls   link 链接 ln   find 查找 find   echo 回声 echo   touch 触摸 touch   change directory 改变目录 cd   recursive 递归的 r   fource 强制 f         以上就是平时操作的一些基本命令，只要记得住简写，明白其中意思即可，接下来我们把这些命令简写组合在一起，看看会发生那些操作吧。</description>
    </item>
    
    <item>
      <title>初始命令行</title>
      <link>https://jinchao1992.github.io/post/%E5%88%9D%E5%A7%8B%E5%91%BD%E4%BB%A4%E8%A1%8C/</link>
      <pubDate>Sun, 11 Aug 2019 14:20:13 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E5%88%9D%E5%A7%8B%E5%91%BD%E4%BB%A4%E8%A1%8C/</guid>
      <description>命令行速记  创建目录 mkdir &amp;quot;目录名字&amp;quot;， 目录名字可以不加引号，也可加，假如目录是有特殊标记的，比如带空格的名字，需要添加引号； 进入目录 cd &amp;quot;目录名字&amp;quot; pwd 显示当前所在目录的绝对路径 创建目标路径，mkdir -p 目录路径  如想在想在 demo01 下创建一个 demo-02 的目录，两种方法 一种是通过 mkdir 先创建 demo01 再在 demo01 里创建 demo02 ，另一种 mkdir -p /demo01/demo02 就可以；  whoami 查询当前用户   查看当前文件路径 ls 路径， 路径就是单独要跳转到那个目录下，如果不加就是当前的 查看路径(包含隐藏路径) ls -a 路径，包含 .</description>
    </item>
    
    <item>
      <title>计算机是怎么工作的</title>
      <link>https://jinchao1992.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84/</link>
      <pubDate>Sun, 11 Aug 2019 14:18:09 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84/</guid>
      <description>为什么要学习计算机基础  因为你首先是程序员，其次才是前端
  硬件与软件：计算机的运行原理 (《编码》) 最大的软件： 操作系统 自己写的软件：数据结构 &amp;amp; 算法 (《数据结构与算法分析》) (排序算法) 多人写软件：软件工程 (《代码大全》)  前端为什么要学习计算机基础  操作系统运行在硬件上； 浏览器运行在操作系统上； HL/CSS/JS 运行在浏览器里； HTML/CSS/JS 和数据都运行在服务器上；  计算机就是一个二进制的世界(0和1)  1代表充电成功，0代表不充电 十进制转换二进制，以10的几次方为底，转换为2的几次方为底;比如：  37 十进制的做法是 3*10^1 + 7*10^0 = 37; 转换二进制则为：1*2^5 + 0*2^4 + 0*2^3 + 1*2^2 + 0*2^1 + 1*2^0 所以为：100101; 切记二进制里只有0和1没有别的存在；   计算机存储  内存如何存储 0 和 1，1 代表充电 0 代表不充电； 如何存储数字，十进制变化为二进制，进行存储；  负数会以补码的方式进行存储； 小数会以浮点数的形式进行存储；  如何存储字符, 将每个字符编号，通过ASCll 美国信息交换标准代码，如下图：   ​如果想存储 a，那么就存储97(十进制)对应的二进制，a -&amp;gt; 0110 0001(2) -&amp;gt; 61(16)；</description>
    </item>
    
    <item>
      <title>我的博客</title>
      <link>https://jinchao1992.github.io/post/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 11 Aug 2019 10:42:41 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      <description>大家好 我的博客已经开通了，欢迎大家来我的小站。</description>
    </item>
    
  </channel>
</rss>