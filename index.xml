<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>小鱼儿的小站</title>
    <link>https://jinchao1992.github.io/</link>
    <description>Recent content on 小鱼儿的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 22 Aug 2019 23:01:15 +0800</lastBuildDate>
    
        <atom:link href="https://jinchao1992.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://jinchao1992.github.io/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/about/</guid>
      
        <description>&lt;p&gt;靳超，前端开发工程师；技术栈：Vue React JS HTML CSS 微信小程序&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML 常用标签</title>
      <link>https://jinchao1992.github.io/post/html-%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Thu, 22 Aug 2019 23:01:15 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/html-%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      
        <description>

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;最新的 &lt;code&gt;HTML5&lt;/code&gt; 里标签大概有 110 个，但是如果让我们学完 110 个的话，对于大多数人来说可能还是比较困难的。工作中常用的也就那么几个，接下来我们介绍下几个常用的 HTML 标签。&lt;/p&gt;

&lt;h2 id=&#34;常用标签&#34;&gt;常用标签&lt;/h2&gt;

&lt;h3 id=&#34;a-标签&#34;&gt;a 标签&lt;/h3&gt;

&lt;p&gt;超链接元素，也可称为锚元素，可以通过此标签链接整个互联网，包括电子邮件、拨打电话、联通其他网页、文件以及同一页面内其他的位置，几乎互联网上的资源，都可以通过超链接访问。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;跳向其他 &lt;code&gt;URL&lt;/code&gt; 点击之后浏览器会跳转到指定的网址，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;https://www.baidu.com&amp;quot;&amp;gt;百度&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;点击如上的 「百度」字样即可跳转到我们经常访问的百度网页上，&lt;code&gt;href&lt;/code&gt; 填写的是我们需要跳转的网页地址。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;a&lt;/code&gt; 标签不是一个单标签，里面可以放置任何内容，包括图片，文字等，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;   &amp;lt;a href=&amp;quot;https://www.baidu.com&amp;quot;&amp;gt;
   	&amp;lt;img src=&amp;quot;假如这是百度的logo.jpg&amp;quot;&amp;gt;
   &amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标签属性（常用）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;href&lt;/code&gt; 链接指向的网址，值可以是一个 &lt;code&gt;URL&lt;/code&gt; 或者锚点，如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;box&amp;quot; style=&amp;quot;border:1px solid #ddd; height: 8000px;&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;#demo&amp;quot;&amp;gt;点击锚点&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;span id=&amp;quot;demo&amp;quot;&amp;gt;我是demo锚点&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;#&lt;/code&gt; 加上锚点名称，点击时会自动滚动到锚点所在位置。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;code&gt;href&lt;/code&gt; 可以是本地的相对路径或者绝对路径&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;href&lt;/code&gt; 链接指向邮件地址，使用 &lt;code&gt;mailto&lt;/code&gt; 协议。用户点击后，浏览器会默认打开本机的邮件程序，可以向指定的地址发送邮件，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;mailto:jinchaophp@126.com&amp;quot;&amp;gt;给我发发发！！！&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;href&lt;/code&gt; 链接指向电话号码，使用 &lt;code&gt;tel&lt;/code&gt; 协议，用户点击后，可以唤起电话，进行电话拨号，当然只是在移动端比较适合。如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;tel:13312345678&amp;quot;&amp;gt;拨打电话给我&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;href&lt;/code&gt; 链接指向伪协议，主要作用，点击 &lt;code&gt;a&lt;/code&gt; 链接后没有后续动作的操作，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;点击玩玩&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;target&lt;/code&gt; 属性指定如何展开打开的链接。它可以指定的窗口打开，也可以在 &lt;code&gt;iframe&lt;/code&gt; 打开&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;https://www.baidu.com&amp;quot; target=&amp;quot;xxx&amp;quot;&amp;gt;百度&amp;lt;/a&amp;gt;
&amp;lt;a href=&amp;quot;https://www.qq.com&amp;quot; target=&amp;quot;xxx&amp;quot;&amp;gt;qq&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上述代码中，两个链接都在名叫 &lt;code&gt;xxx&lt;/code&gt; 的窗口打开。首先点击 &lt;code&gt;百度&lt;/code&gt; 浏览器发现没有一个叫 &lt;code&gt;xxx&lt;/code&gt; 的窗口，就会新建一个窗口，起名字为 &lt;code&gt;xxx&lt;/code&gt; 。然后又点击 &lt;code&gt;qq&lt;/code&gt; 由于已经有 &lt;code&gt;xxx&lt;/code&gt; 窗口，就会取代之前打开的 &lt;code&gt;百度&lt;/code&gt;，变为了 &lt;code&gt;qq&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;target&lt;/code&gt; 属性有四个取值：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_self&lt;/code&gt; 当前窗口打开，默认写法；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_blank&lt;/code&gt; 新窗口打开；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_parent&lt;/code&gt; 上层窗口打开，主要用于 &lt;code&gt;iframe&lt;/code&gt; 。如果当前窗口没有上层窗口，这个值就等于 &lt;code&gt;_self&lt;/code&gt;；&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;_top&lt;/code&gt; 顶层窗口打开。如果当前窗口就是顶层窗口，那么写法跟 &lt;code&gt;_self&lt;/code&gt; 一样；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;download&lt;/code&gt; 属性表明当前链接用于下载，而不是跳转到其他网页，如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;demo.txt&amp;quot; download&amp;gt;下载&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;code&gt;download&lt;/code&gt; 属性只在链接与网址同源时，才会生效，链接必须与网址是同一个网站&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;download&lt;/code&gt; 设置了属性值，下载时文件名称就是规定的 &lt;code&gt;download&lt;/code&gt;属性值:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt; &amp;lt;a href=&amp;quot;demo.txt&amp;quot; download=&amp;quot;demo.txt&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;img-标签&#34;&gt;&lt;code&gt;img&lt;/code&gt; 标签&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;img&lt;/code&gt; 是图像标签，图片是互联网的重要组成部分，它可以让网页变的丰富多彩。一起来看看吧。&lt;/p&gt;

&lt;h4 id=&#34;img&#34;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;标签是单独使用的，没有闭合标签。也可以叫做单标签、空标签、可替换标签。如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;img src=&amp;quot;logo.jpg&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src&lt;/code&gt; 指定的是图片路径，可以是相对路径、绝对路径以及一个网址。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签默认是一个行内元素，但是与行内元素又不太一样，因为它可以设置宽高，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;p&amp;gt;Hello&amp;lt;img src=&amp;quot;logo.jpg&amp;quot;&amp;gt;World&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;图片的默认大小是以图像原始大小为基准，就是说图像有多大在 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签里就显示多大。如果图片很大，又与文字处在同一行，那么图片将把当前行的行高撑开，并且图片的底边与文字的底边在同一条水平线上。但是不太符合审美，于是我通常采用如下写法：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;p style=&amp;quot;border: 1px solid red;&amp;quot;&amp;gt;
    &amp;lt;img src=&amp;quot;https://b-gold-cdn.xitu.io/v3/static/img/logo.a7995ad.svg&amp;quot; alt=&amp;quot;logo&amp;quot; style=&amp;quot;vertical-align: middle;&amp;quot;&amp;gt; 
    掘金一个很不错的网站
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 可以放在一个 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标签的内部，可以把图片当作一个可以点击的链接，通常做法就是把 &lt;code&gt;logo&lt;/code&gt; 图片放在一个 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 链接中，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;p style=&amp;quot;border: 1px solid red;&amp;quot;&amp;gt;
   &amp;lt;a href=&amp;quot;https://juejin.im/timeline&amp;quot;&amp;gt;
     &amp;lt;img src=&amp;quot;https://b-gold-cdn.xitu.io/v3/static/img/logo.a7995ad.svg&amp;quot; alt=&amp;quot;logo&amp;quot; style=&amp;quot;vertical-align: middle;&amp;quot;&amp;gt;
   &amp;lt;/a&amp;gt;
    掘金一个很不错的网站
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;属性&#34;&gt;属性&lt;/h4&gt;

&lt;h5 id=&#34;1-alt-属性&#34;&gt;1. alt 属性&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;alt&lt;/code&gt; 属性用来设定图片的文字说明。图片不显示时（路径错误、名称错误、加载失败等），会在图片位置上显示该文本。如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;img src=&amp;quot;logo.jpg&amp;quot; alt=&amp;quot;logo图片&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-width-和-height-属性&#34;&gt;2. width 和 height 属性&lt;/h5&gt;

&lt;p&gt;图片默认大小是插入图像的大小，&lt;code&gt;width&lt;/code&gt; 属性和 &lt;code&gt;height&lt;/code&gt; 属性可以给图片设置宽高，单位是像素，也可设置百分比，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;img src=&amp;quot;logo.jpg&amp;quot; alt=&amp;quot;logo图片&amp;quot; width=&amp;quot;100&amp;quot; height=&amp;quot;200&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意：如果我们设置了图片的宽高，浏览器会在网页上预留出空间大小，不管图片有没有加载成功。宽高也可以通过 &lt;code&gt;css&lt;/code&gt; 设置，这也是工作中常用的写法。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;img&lt;/code&gt; 标签特性，如果只是设置了宽高的其中一个，那么另一个会去自动缩放。所以我们在设置的时候只需设置一个属性即可。&lt;/p&gt;

&lt;h4 id=&#34;响应式&#34;&gt;响应式&lt;/h4&gt;

&lt;p&gt;一句话，只需给图片加上 &lt;code&gt;max-width: 100%&lt;/code&gt; 的样式。&lt;/p&gt;

&lt;h4 id=&#34;事件&#34;&gt;事件&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;onload&lt;/code&gt; 图片加载完成之后调用，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;oImg.onload = function() {
console.log(&#39;加载完成！&#39;)
}
/*oImg 是当前图片*/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;onerror&lt;/code&gt; 图片加载失败之后调用，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;oImg.onerror = function() {
console.log(&#39;加载失败&#39;);
}
/*加载失败后，可以给图片一个默认的图片，这样对于用户来说就显得比较友好了*/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;支持的图片格式&#34;&gt;支持的图片格式&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JPEG&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GIF&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PNG&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SVG&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BMP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;table-标签&#34;&gt;&lt;code&gt;table&lt;/code&gt; 标签&lt;/h3&gt;

&lt;p&gt;表格布局是已经淘汰了的布局。但是表格对于平时的工作来说还是重要的，尤其是做后台管理系统来说，一个好的表格显的尤为重要。市面上有很多优秀的 &lt;code&gt;UI&lt;/code&gt; 框架的表格做的非常不错，如，&lt;code&gt;element-ui&lt;/code&gt; 、&lt;code&gt;Ant Design&lt;/code&gt;、&lt;code&gt;iview&lt;/code&gt; 等，它们的表格是非常值得学习的。&lt;/p&gt;

&lt;p&gt;表格是由&lt;strong&gt;表头&lt;/strong&gt;、&lt;strong&gt;表体&lt;/strong&gt;、&lt;strong&gt;表尾&lt;/strong&gt;构成的，三大块又是由&lt;code&gt;行&lt;/code&gt; 和 &lt;code&gt;列&lt;/code&gt; 构成，如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;table border=&amp;quot;1&amp;quot;&amp;gt;
    &amp;lt;thead&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;表头&amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;内容&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;
    &amp;lt;tfoot&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;表尾&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tfoot&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;三者的前后顺序不会影响网页解析表格的前后顺序。&lt;/p&gt;

&lt;h4 id=&#34;1-table-caption&#34;&gt;1. &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;如上代码所示，&lt;code&gt;table&lt;/code&gt; 是一个块级容器标签，所有表格内容都要放在这个标签里。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt; 总是 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 里的第一个子元素，表示表格的标题，是可选的。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;table&amp;gt;
&amp;lt;caption style=&amp;quot;width: 200px;&amp;quot;&amp;gt;表格标题&amp;lt;/caption&amp;gt;
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
  &amp;lt;td style=&amp;quot;border: 1px solid #ddd;&amp;quot;&amp;gt;1&amp;lt;/td&amp;gt;
  &amp;lt;td style=&amp;quot;border: 1px solid #ddd;&amp;quot;&amp;gt;2&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-thead-tbody-tfoot&#34;&gt;2. &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; 、&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 、&lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;三者是表格的三大模块，&lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; 与 &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; 是可选的，其实 &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 也可选，但是呢如果我们省略了 &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 浏览器是会自动解析一个 &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 所以在书写表格时，&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 必须写。&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 可以是多个，比如表格嵌套表格等。&lt;/p&gt;

&lt;h4 id=&#34;3-colgroup-col&#34;&gt;3. &lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt; 、&lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt; 是 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 的子元素排在第一位，除标题外，用来包含一组列的定义，&lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt; 是它的子元素，用来定义表格的一列，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;table&amp;gt;
  &amp;lt;colgroup&amp;gt;
    &amp;lt;col&amp;gt;
    &amp;lt;col&amp;gt;
    &amp;lt;col&amp;gt;
  &amp;lt;/colgroup&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述代码表示表格有三列内容，&lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt; 是一个单标签，也是一个空标签，不会产生子元素。它的主要作用是，除了声明表格的结构，还可以给表格附加单独的样式，如加宽度等，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;table border=&amp;quot;1&amp;quot;&amp;gt;
  &amp;lt;colgroup&amp;gt;
    &amp;lt;col width=&amp;quot;100&amp;quot;&amp;gt;
    &amp;lt;col width=&amp;quot;200&amp;quot;&amp;gt;
    &amp;lt;col widht=&amp;quot;300&amp;quot;&amp;gt;
  &amp;lt;/colgroup&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;1&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;2&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;3&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;针对于 &lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt; 设置的样式会对整个表格有效。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt; 有一个 &lt;code&gt;span&lt;/code&gt; 属性，属性值为正整数，默认为 &lt;code&gt;1&lt;/code&gt; 。如果大于1，表示该列的宽度包含连续的多列，如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;table border=&amp;quot;1&amp;quot; width=&amp;quot;100%&amp;quot;&amp;gt;
  &amp;lt;colgroup&amp;gt;
    &amp;lt;col width=&amp;quot;100&amp;quot;&amp;gt;
    &amp;lt;col width=&amp;quot;200&amp;quot;&amp;gt;
    &amp;lt;col widht=&amp;quot;300&amp;quot; span=&amp;quot;2&amp;quot;&amp;gt;
  &amp;lt;/colgroup&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;1&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;2&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;3&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;4&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在实际数据中第三列和第四列公用一个宽度。&lt;/p&gt;

&lt;h4 id=&#34;4-tr-th-td&#34;&gt;4. &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 、&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 标签表示表格的一行，放在 &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; 、&lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt; 之中。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 用来定义单元格，&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 是标题单元格，默认是加粗的，&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 是数据单元格，如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;table border=&amp;quot;1&amp;quot;&amp;gt;
  &amp;lt;colgroup&amp;gt;
    &amp;lt;col width=&amp;quot;100&amp;quot;&amp;gt;
    &amp;lt;col width=&amp;quot;120&amp;quot;&amp;gt;
    &amp;lt;col width=&amp;quot;120&amp;quot;&amp;gt;
    &amp;lt;col width=&amp;quot;120&amp;quot;&amp;gt;
  &amp;lt;/colgroup&amp;gt;
  &amp;lt;thead&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;th&amp;gt;姓名&amp;lt;/th&amp;gt;
      &amp;lt;th&amp;gt;语文&amp;lt;/th&amp;gt;
      &amp;lt;th&amp;gt;数学&amp;lt;/th&amp;gt;
      &amp;lt;th&amp;gt;英语&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/thead&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;th&amp;gt;方一凡&amp;lt;/th&amp;gt;
      &amp;lt;td&amp;gt;60&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;80&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;100&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;th&amp;gt;林磊儿&amp;lt;/th&amp;gt;
      &amp;lt;td&amp;gt;100&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;100&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;100&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;th&amp;gt;乔英子&amp;lt;/th&amp;gt;
      &amp;lt;td&amp;gt;99&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;98&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;100&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-colspan-属性-rowspan-属性&#34;&gt;5. &lt;code&gt;&amp;lt;colspan&amp;gt;&lt;/code&gt;属性、&lt;code&gt;&amp;lt;rowspan&amp;gt;&lt;/code&gt;属性&lt;/h4&gt;

&lt;p&gt;单元格存在跨行和跨列的情况，可以通过 &lt;code&gt;&amp;lt;colspan&amp;gt;&lt;/code&gt; 与 &lt;code&gt;&amp;lt;rowspan&amp;gt;&lt;/code&gt; 属性设置，前者表示跨列，后者表示跨行，他们的值只能是正整数，默认为1，如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;table border=&amp;quot;1&amp;quot; width=&amp;quot;500&amp;quot;&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td colspan=&amp;quot;2&amp;quot; rowspan=&amp;quot;2&amp;quot;&amp;gt;A&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;C&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;C&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;A&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;B&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;C&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意：去除边框合并使用 &lt;code&gt;css&lt;/code&gt; 样式 &lt;code&gt;border-collapse: collapse;&lt;/code&gt; 加在 &lt;code&gt;table&lt;/code&gt; 标签上。&lt;/p&gt;

&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;HTML&lt;/code&gt; 重点标签还有 &lt;code&gt;form&lt;/code&gt; 表单标签，它可以让前端跟后端相连接从而可以获取到真实的数据，这块内容比较多，需要单独拿出来，所以看后续的笔记喽。&lt;code&gt;HTML&lt;/code&gt; 需要多多记忆，多多练习，一定记得用正确的标签做正确的布局。以此共勉，加油！！&lt;/p&gt;

&lt;h2 id=&#34;参考链接&#34;&gt;参考链接&lt;/h2&gt;

&lt;p&gt;[阮一峰 网道教程 HTML 篇](&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML 入门笔记1</title>
      <link>https://jinchao1992.github.io/post/html-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Sun, 18 Aug 2019 16:41:46 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/html-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      
        <description>

&lt;p&gt;HTML（英语：HyperText Markup Language）超文本编辑语言。由&lt;strong&gt;万维网联盟（W3C）&lt;/strong&gt;负责维护，于1990年诞生，作者是：Time Berners-Lee（蒂姆·伯纳斯-李）, 也可称为”李爵士“。是整个网页的基础，是学好前端必备的一大知识模块，学好 &lt;code&gt;HTML&lt;/code&gt; 非常重要，并且我们要学会使用*&lt;strong&gt;语义化&lt;/strong&gt;的标签来书写 &lt;code&gt;HTML&lt;/code&gt; 标签。&lt;/p&gt;

&lt;h2 id=&#34;html-简介&#34;&gt;HTML 简介&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;HTML 的版本&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;HTML 4.01&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;XHTML&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTML5&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTML5.1&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;规范&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;由 W3C 负责文档编写&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;声明规范&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;DOCTYPE html&amp;gt;&lt;/code&gt; html5 声明规范，目前采用最广的声明规范&lt;/li&gt;
&lt;li&gt;其他参照 &lt;a href=&#34;https://www.w3.org/QA/2002/04/valid-dtd-list.html&#34;&gt;https://www.w3.org/QA/2002/04/valid-dtd-list.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;HTML&lt;/code&gt; 起手代码&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;!--文档类型--&amp;gt;
&amp;lt;html lang=&amp;quot;zh-CN&amp;quot;&amp;gt; &amp;lt;!--设置html解析语言--&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;!--设置字符编码--&amp;gt;
  &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width,inital-scale=1.0&amp;quot;&amp;gt; &amp;lt;!--移动端适配代码--&amp;gt;
  &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt; &amp;lt;!--IE 浏览器使用最新版本--&amp;gt;
  &amp;lt;title&amp;gt;我的第一个网页&amp;lt;/title&amp;gt; &amp;lt;!--网页名称--&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;html-标签&#34;&gt;HTML 标签&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;、&amp;lt;nav&amp;gt;&amp;lt;/nav&amp;gt;&lt;/code&gt; 双标签；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 单标签， 单标签可以不加&lt;code&gt;/&lt;/code&gt; 结束，也可以加，最新标准可以不加；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;注意：标签不区分，但是，习惯上还是小写；标签属性名称可以是单引号也可是双引号，如：&lt;code&gt;&amp;lt;div title=&#39;我是div&#39;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;，如没有特殊字符的话可以不用加引号。&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&#34;常用章节标签-注意-这些标签都是双标签&#34;&gt;常用章节标签(注意：这些标签都是双标签)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;h1~h6&lt;/code&gt; 标题标签，表示一级标题到六级标题；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; 章节标签，表示一个包含在HTML文档中独立部分，如我们写文章的每一章节都用 &lt;code&gt;section&lt;/code&gt; 表示，并把一些标题元素，段落元素包含进去;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; 表示文档、页面、应用或网站中的独立结构，比如我们写的一篇文章可以用 &lt;code&gt;&amp;lt;article&amp;gt;&amp;lt;/article&amp;gt;&lt;/code&gt; 来包裹，特点是可复用，独立存在；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 段落标签，表示一段文字；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; 头部标签，表示一个独立的头部内容标签，头部内容主要放 &lt;code&gt;logo&lt;/code&gt; 导航等；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; 尾部标签，表示一篇文章的结尾，或者根元素的结尾，内容主要有：版权信息、网站备案信息等；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;  主体内容标签，所有主体内容的父标签；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; 旁支内容标签，可以单独拆离网页的元素，与其他元素并没有任何关联，不会影响其他内容展示，如：网页侧边栏广告等;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;代码示例：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;header&amp;gt;头部内容&amp;lt;/header&amp;gt;
&amp;lt;main&amp;gt;
  &amp;lt;h2&amp;gt;文章标题&amp;lt;/h2&amp;gt;
  &amp;lt;h3&amp;gt;副标题&amp;lt;/h3&amp;gt;
  &amp;lt;article&amp;gt;
    &amp;lt;section&amp;gt;
      &amp;lt;h2&amp;gt;1. 第一章节&amp;lt;/h2&amp;gt;
      &amp;lt;h3&amp;gt;1.1 初始HTML&amp;lt;/h3&amp;gt;
      &amp;lt;p&amp;gt;HTML很重要，非常重要&amp;lt;/p&amp;gt;
    &amp;lt;/section&amp;gt;
    &amp;lt;section&amp;gt;
      &amp;lt;h2&amp;gt;2. 第二章节&amp;lt;/h2&amp;gt;
      &amp;lt;h3&amp;gt;2.1 初始HTML&amp;lt;/h3&amp;gt;
      &amp;lt;p&amp;gt;HTML很重要，非常重要&amp;lt;/p&amp;gt;
    &amp;lt;/section&amp;gt;
  &amp;lt;/article&amp;gt;
&amp;lt;/main&amp;gt;
&amp;lt;aside&amp;gt;文章来源：xxx&amp;lt;/aside&amp;gt;
&amp;lt;footer&amp;gt;
&amp;amp;copy;版权声明：归xxx所有
&amp;lt;/footer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;html-内容标签&#34;&gt;HTML 内容标签&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;ol&amp;gt; + &amp;lt;li&amp;gt;&lt;/code&gt; 有序列表；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;ul&amp;gt; + &amp;lt;li&amp;gt;&lt;/code&gt; 无序列表；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;dl&amp;gt; + &amp;lt;dt&amp;gt; + &amp;lt;dd&amp;gt;&lt;/code&gt; 描述列表；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 可以解析空白字符（换行、空格、tab）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; 分割符，单标签； 语义上的分割，只要在语义上是分割用此元素表示，如果仅仅是样式上的需要使用 CSS 来表示；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 换行符，单标签；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 超链接，通过此链接链接整个互联网；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; 着重元素，标记出用户需要着重阅读的内容；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; 表示重要的 十分重要的，是语义上的加重；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 展示计算机代码，可以更 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 搭配使用；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;quote&amp;gt;&lt;/code&gt; 表示一个引用元素，默认是内联元素；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt; 块级引用元素；&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;html-全局属性&#34;&gt;HTML 全局属性&lt;/h4&gt;

&lt;p&gt;所谓全局属性，就是所有的标签都有的属性。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;  给一个标签添加一个 &lt;code&gt;class&lt;/code&gt; 属性，方便书写 &lt;code&gt;css&lt;/code&gt; , 划分一类元素；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt; 属性表示此元素是唯一的，可以在 &lt;code&gt;JS&lt;/code&gt; 中直接获取，不建议布局时给元素添加 &lt;code&gt;id&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contenteditable&lt;/code&gt; 规定元素是否可被用户编辑。如果给元素加上此属性后，那么不管是不是 &lt;code&gt;input&lt;/code&gt; 元素，则标签都会类似于文本一样可以用来编辑内容；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hiddle&lt;/code&gt; 让元素不可见；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style&lt;/code&gt; 书写行间样式，行间写的样式比内联和外联的权重都大；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;title&lt;/code&gt; 给元素添加标题，用法：如果一个元素的内容过长可以增加省略号，可以把 &lt;code&gt;title&lt;/code&gt; 放上所有的内容，只有鼠标滑过元素才会显示；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tabindex&lt;/code&gt; 可以设置用键盘&lt;code&gt;tab&lt;/code&gt;键，用来选中元素;

&lt;ul&gt;
&lt;li&gt;tabindex=负值&lt;code&gt;通常是&lt;/code&gt;tabindex=&amp;ldquo;-1&amp;rdquo;&lt;code&gt;, 表示元素是可聚焦的，但是不能通过键盘导航来访问该元素，也就是&lt;/code&gt;Tab` 键；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tabindex=&amp;quot;0&amp;quot;&lt;/code&gt; , 表示元素是可聚焦的，并且可以通过键盘导航来聚焦到该元素，它的相对顺序是当前处于的 &lt;code&gt;DOM&lt;/code&gt; 解构来决定的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tabindex=正值&lt;/code&gt; 表示元素可聚焦，可以通过键盘导航来聚焦到该元素；它的相对顺序按照 &lt;code&gt;tabindex&lt;/code&gt; 的数值&lt;strong&gt;递增而滞后聚焦&lt;/strong&gt;。 如果多个元素拥有相同的 &lt;code&gt;tabindex&lt;/code&gt; , 它们的相对顺序按照它们在当前 &lt;code&gt;DOM&lt;/code&gt; 中的先后顺序决定。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS Margin 布局技巧</title>
      <link>https://jinchao1992.github.io/post/css-margin-%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sun, 11 Aug 2019 14:28:00 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/css-margin-%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/</guid>
      
        <description>

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;CSS&lt;/code&gt; 里有一个重要的东西，叫 &lt;code&gt;CSS&lt;/code&gt; 盒模型，它几乎能贯穿我们学习 &lt;code&gt;CSS&lt;/code&gt; 的整个阶段，如下图所示，就是我们所说的盒子模型：&lt;/p&gt;

&lt;p&gt;[!&lt;img src=&#34;https://mdn.mozillademos.org/files/8685/boxmodel-(3).png&#34; alt=&#34;CSS Box model&#34; /&gt;]()&lt;/p&gt;

&lt;p&gt;(注：图片来源 &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model&#34;&gt;MDN&lt;/a&gt; )&lt;/p&gt;

&lt;p&gt;&amp;ldquo;盒模型&amp;rdquo;中最外层透明的区域就是 &lt;code&gt;margin&lt;/code&gt;所在，它会将其他区域从盒子模型内容中推开。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;margin&lt;/code&gt; 一共有四个属性值， &lt;code&gt;margin-top&lt;/code&gt; 、&lt;code&gt;margin-right&lt;/code&gt; 、&lt;code&gt;margin-bottom&lt;/code&gt; 和 &lt;code&gt;margin-left&lt;/code&gt; 属性，也可以设置简写属性 &lt;code&gt;margin&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;margin&lt;/code&gt; 看起来比较简单，但是，它其实有自己的奥妙所在，比如我们在布局中经常遇到 &lt;code&gt;margin&lt;/code&gt; 重叠效果等，接下来我们来看看 &lt;code&gt;margin&lt;/code&gt; 究竟有什么神奇所在吧。&lt;/p&gt;

&lt;h2 id=&#34;margin-重叠&#34;&gt;margin 重叠&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;margin&lt;/code&gt; 重叠指的是垂直重叠，重叠的意思是，当我们规定一个模块的 &lt;code&gt;margin-bottom&lt;/code&gt; 与 紧邻着的下一个模块的 &lt;code&gt;margin-top&lt;/code&gt; 它们会发生重叠，它们之间不会出现较大的空白。因为代码会取两个值之间较大的那个，比如 第一个模块设置&lt;code&gt;margin-bottom: 50px&lt;/code&gt; ，第二个模块设置 &lt;code&gt;margin-top: 100px&lt;/code&gt; 那么第一个模块的 &lt;code&gt;margin-bottom&lt;/code&gt; 则不会起作用，起作用的则是 第二个模块的 &lt;code&gt;margin-top&lt;/code&gt; 也就是说他们之间的空白间距是 &lt;code&gt;100px&lt;/code&gt; ，可能会有疑问，那 &lt;code&gt;50px&lt;/code&gt; 跑哪里去了，其实是被包含在 &lt;code&gt;100px&lt;/code&gt; 里面了 这就是所谓的 &lt;code&gt;margin&lt;/code&gt; 重叠。&lt;/p&gt;

&lt;p&gt;以下情况下，&lt;code&gt;margin&lt;/code&gt; 会发生重叠：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;相邻&lt;/strong&gt;的兄弟元素&lt;/li&gt;
&lt;li&gt;完全空盒子&lt;/li&gt;
&lt;li&gt;父元素与它的第一个或最后一个子元素&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;相邻的兄弟元素重叠&#34;&gt;相邻的兄弟元素重叠&lt;/h2&gt;

&lt;p&gt;上述我们所描绘的情况就是相邻兄弟之间的 &lt;code&gt;margin&lt;/code&gt; 重叠。&lt;/p&gt;

&lt;p&gt;如下示例，有三个 &lt;code&gt;div&lt;/code&gt; 元素。第一个 &lt;code&gt;div&lt;/code&gt; 的顶部与底部的 &lt;code&gt;margin&lt;/code&gt; 分别是 &lt;code&gt;50px&lt;/code&gt; 第二个 &lt;code&gt;div&lt;/code&gt; 的顶部与底部 &lt;code&gt;margin&lt;/code&gt; 分别是 &lt;code&gt;20px&lt;/code&gt; ，第三个 &lt;code&gt;div&lt;/code&gt; 的顶部与底部 &lt;code&gt;margin&lt;/code&gt; 是 &lt;code&gt;3em&lt;/code&gt;。 那么出现的重叠情况是，第一个与第二个的间距是 &lt;code&gt;50px&lt;/code&gt;, 因为第二个元素的顶部小于第一个底部的 &lt;code&gt;margin&lt;/code&gt;，取两者之间较大的。第二个元素与第三个元素之间的间距则是 &lt;code&gt;3em&lt;/code&gt; ，同理 &lt;code&gt;3em&lt;/code&gt; 大于第二个元素的 底部 &lt;code&gt;20px&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;box1&amp;quot;&amp;gt;模块一&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;box2&amp;quot;&amp;gt;模块二&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;box3&amp;quot;&amp;gt;模块三&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;div {
  border: 1px solid #ddd;
  height: 200px;
}
.box1 {
  margin: 50px 0;
}
.box2 {
  margin: 20px 0;
}
.box3 {
  margin: 3em 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在线 &lt;a href=&#34;https://jsbin.com/majavev/2/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;完全空盒子&#34;&gt;完全空盒子&lt;/h2&gt;

&lt;p&gt;什么是完全空盒子，就是盒子里面什么也没有就是完全的空盒子，没有内容也没有子元素，它顶部与底部的 &lt;code&gt;margin&lt;/code&gt; 可能会相互重叠，如下示例，一个 &lt;code&gt;class&lt;/code&gt; 为 &lt;code&gt;empty&lt;/code&gt; 的元素顶部与底部的 &lt;code&gt;margin&lt;/code&gt; 分别为 &lt;code&gt;50px&lt;/code&gt; , 但是第一个元素与第三个元素之间的间距并没有 &lt;code&gt;100px&lt;/code&gt; ，而是 &lt;code&gt;50px&lt;/code&gt; 。这就是空盒子造成的 &lt;code&gt;margin&lt;/code&gt; 重叠，如果我们在空盒子里面写入内容就会阻止 &lt;code&gt;margin&lt;/code&gt; 合并。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;box1&amp;quot;&amp;gt;模块一&amp;lt;/div&amp;gt;
    &amp;lt;div class=&amp;quot;box2 empty&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&amp;quot;box3&amp;quot;&amp;gt;模块三&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.wrap {
  border: 5px dotted #000;
}
.box1, .box3 {
  height: 100px;
  background: #f60;
}
.empty {
  margin: 50px 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在线 &lt;a href=&#34;https://jsbin.com/majavev/3/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;父元素和第一个或最后一个子元素&#34;&gt;父元素和第一个或最后一个子元素&lt;/h2&gt;

&lt;p&gt;一开始接触布局时，我们可能会经常碰到这样的问题，我们给子级设置一个&lt;code&gt;margin-top&lt;/code&gt; 值，如果没有清除 &lt;code&gt;BFC&lt;/code&gt; 的话，常常看到的错觉是这样的：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/08/03/MSaHkUWzL29hpRo.png&#34; alt=&#34;WX20190803-143924.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;从图上可以看到，第一项与最后一项与父元素的 &lt;code&gt;margin&lt;/code&gt; 齐平，好像是子元素与父元素之间没有 &lt;code&gt;20px&lt;/code&gt; 的 &lt;code&gt;margin&lt;/code&gt; 一样。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.box {
  background: green;
}

.child {
  height: 100px;
  background: red;
  margin: 20px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是因为子节点上的 &lt;code&gt;margin&lt;/code&gt; 会随着父元素上的任何一边 &lt;code&gt;margin&lt;/code&gt; 相互重叠，从而最终位于父元素的外部，造成的错觉像是父元素向下 &lt;code&gt;margin&lt;/code&gt; 或者向上 &lt;code&gt;margin&lt;/code&gt; 一样。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：在 CSS 中，只指定了重置方向的 &lt;code&gt;margin&lt;/code&gt; 重叠，即元素的顶部和底部的 &lt;code&gt;margin&lt;/code&gt; 重叠。左右是不会发生重叠的。&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;还有一点就是，margin 只在块的方向上发生重叠，比如段落之间。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;阻止-margin-发生重叠&#34;&gt;阻止 margin 发生重叠&lt;/h2&gt;

&lt;p&gt;如果一个元素是绝对定位，或者是浮动的， 它的 &lt;code&gt;margin&lt;/code&gt; 永远不会发生重叠， 因为他已经脱离文档流了。&lt;/p&gt;

&lt;p&gt;如果是一个完全空的盒子，给它设置一个 &lt;code&gt;border&lt;/code&gt; 或者 &lt;code&gt;padding&lt;/code&gt; ，那么这个空盒子的 &lt;code&gt;margin&lt;/code&gt; 则不会发生重叠。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;box1&amp;quot;&amp;gt;模块一&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;box2 empty&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;box3&amp;quot;&amp;gt;模块三&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.wrap {
  border: 5px dotted #000;
}
.box1, .box3 {
  height: 100px;
  background: #f60;
}
.empty {
  margin: 50px 0;
  /* border: 1px solid transparent; */
  padding: 1px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在线 &lt;a href=&#34;https://jsbin.com/majavev/5/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;那么为什么加上 &lt;code&gt;border&lt;/code&gt; 或 &lt;code&gt;padding&lt;/code&gt; 就可以了呢？ 那是因为如果一个空盒子加上 &lt;code&gt;border&lt;/code&gt; 或者 &lt;code&gt;padding&lt;/code&gt; 后就有高度了就变成非空盒子了。如果我们在代码布局上，我们标记一个为空的段落元素，如果不想让他造成与其他模块较大的空白，这时候我们做的 &lt;code&gt;margin&lt;/code&gt; 重叠就有了一定的意义。&lt;/p&gt;

&lt;p&gt;对于父元素和第一个或者最后一个子元素的 &lt;code&gt;margin&lt;/code&gt; 重叠，如果我们向父级添加 &lt;code&gt;border&lt;/code&gt;  或者  &lt;code&gt;padding&lt;/code&gt; 那么子级上的 &lt;code&gt;margin&lt;/code&gt; 则会保留。&lt;/p&gt;

&lt;h2 id=&#34;创建格式化上下文-bfc&#34;&gt;创建格式化上下文（BFC）&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;BFC (Block Formatting Context) 格式化上下文&lt;/strong&gt; ，是 Web 页面中盒模型布局的css渲染模式，是一个独立的渲染区域或者是一个隔离的独立容器。&lt;/p&gt;

&lt;p&gt;BFC 可以阻止边距的重叠。我们可以在父级元素上添加BFC，从而可以避免与子级元素的 &lt;code&gt;margin&lt;/code&gt; 重叠。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.box {
  background: green;
  overflow: hidden; /* 创建BFC */
  /*overflow: auto*/
  /*display: flow-root*/
}

.child {
  height: 100px;
  background: #f60;
  margin: 20px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/08/03/WsYOwLH6aESAk2X.png&#34; alt=&#34;WX20190803-154431.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;display: flow-root&lt;/code&gt; 是 CSS3 新出来的一个属性，用来创建一个无副作用的 BFC。将 &lt;code&gt;overflow&lt;/code&gt; 的属性的值设置为 &lt;code&gt;auto&lt;/code&gt; 或者 &lt;code&gt;hidden&lt;/code&gt; 也会产生同样的效果，只不过有时候这俩属性值会带来一些副作用。&lt;/p&gt;

&lt;h2 id=&#34;布局时的-margin-策略&#34;&gt;布局时的 margin 策略&lt;/h2&gt;

&lt;p&gt;由于我们知道上下 &lt;code&gt;margin&lt;/code&gt;会发生重叠，所以我们在网站布局时，会采用单独给一边加 &lt;code&gt;margin&lt;/code&gt; 值的策略，要么是 &lt;code&gt;margin-top&lt;/code&gt; 要么是 &lt;code&gt;margin-bottom&lt;/code&gt; 这两个在布局时最好是一个元素上别同时存在，当然指的是相邻的元素。那如果是父子级身上的 &lt;code&gt;margin&lt;/code&gt; 重叠的情况下，我们最好还是采用上述清除 &lt;code&gt;margin&lt;/code&gt; 的办法，当然现代浏览器的发展以及一些布局方法的更新，我们可以采用 &lt;code&gt;flex&lt;/code&gt; 布局 和 &lt;code&gt;grid&lt;/code&gt; 布局 抛除掉 &lt;code&gt;margin&lt;/code&gt; 的使用。当前具体问题还得具体分析，我相信我们做的例子多了 会有更深刻的认识。&lt;/p&gt;

&lt;h2 id=&#34;百分比-margin&#34;&gt;百分比 margin&lt;/h2&gt;

&lt;p&gt;在 CSS 中使用百分比的时候，它必须是某个元素的百分比，也就是说我们必须有一个参考元素。使用百分比设置的 &lt;code&gt;margin(或者padding)&lt;/code&gt; 始终是父元素内联大小（水平写入模式下单宽度）的百分比。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;wrapper&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
    I have a margin of 10%.
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt; * {
   box-sizing: border-box;
 }
 .wrapper {
   border: 5px dotted black;
   width: 200px;
   height: 400px;
 }
 .box {
   background-color: rgb(55, 55, 110);
   color: white;
   padding: 20px;
   border-radius: .5em;
   margin: 10%;
 }
 body {
   font: 1.4em/1.3 &amp;quot;Gill Sans&amp;quot;, &amp;quot;Gill Sans MT&amp;quot;, Calibri, sans-serif;
   margin: 2em 3em;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在线 &lt;a href=&#34;https://jsbin.com/jajacam/1/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;

&lt;p&gt;只是简单的介绍了下，平时遇到 &lt;code&gt;margin&lt;/code&gt; 重叠的几种情况，以及我们该如何处理。还是那句话， CSS 博大精深，虽然容易入门但是后期的东西真的是让我们随时随地的去学习了，所以我们在平时的学习过程中，要记得多加练习，多多总结。&lt;/p&gt;

&lt;h2 id=&#34;参考资料&#34;&gt;参考资料&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://juejin.im/post/5d40dc46e51d4561cf15df4a#heading-6&#34;&gt;关于 CSS margin，你需要知道的一切&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS以及常见的布局方式</title>
      <link>https://jinchao1992.github.io/post/css%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%9A%84%E5%B8%83%E5%B1%80%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sun, 11 Aug 2019 14:26:53 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/css%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%9A%84%E5%B8%83%E5%B1%80%E6%96%B9%E5%BC%8F/</guid>
      
        <description>

&lt;h2 id=&#34;css是什么&#34;&gt;CSS是什么？&lt;/h2&gt;

&lt;p&gt;CSS，层叠样式表(英语：&lt;strong&gt;C&lt;/strong&gt;ascading &lt;strong&gt;S&lt;/strong&gt;tyle &lt;strong&gt;S&lt;/strong&gt;heets)，是一种用来为结构化文档 (如：HTML文档) 添加样式 (字体、颜色、间距等) 的计算机语言，由 W3C 定义和维护。当前最新的版本是 CSS2.1，为W3C的推荐标准。CSS3(2011年) 已经被现代浏览器支持。&lt;/p&gt;

&lt;h3 id=&#34;css发展历史&#34;&gt;CSS发展历史&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;1994年哈肯.维姆.莱提出了CSS的最初建议。伯特.波斯加入一起设计CSS。&lt;/li&gt;
&lt;li&gt;1997年初，W3C内组织了专门管CSS的工作组，其负责人是克里斯.里雷。&lt;/li&gt;
&lt;li&gt;1998年5月W3C发表了CSS2，CSS2.1修改了CSS2中的一些错误，删除了其中不被支持的内容和增加了一些已有浏览器的扩展内容。&lt;/li&gt;
&lt;li&gt;从2001年开始CSS被分为了多个单独的模块，统称为CSS3。这些模块有：

&lt;ul&gt;
&lt;li&gt;CSS 选择器 level  3&lt;/li&gt;
&lt;li&gt;CSS 媒体查询 level 3&lt;/li&gt;
&lt;li&gt;CSS Color level 3&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;周边工具&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Less CSS 一种简化、功能更多的 CSS 语言 &lt;a href=&#34;https://less.bootcss.com/&#34;&gt;中文官网&lt;/a&gt; &lt;a href=&#34;http://lesscss.org/&#34;&gt;英文官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SASS 一种简化、功能更多的 CSS 语言 &lt;a href=&#34;http://sass.bootcss.com/&#34;&gt;中文官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Post CSS 一种 CSS 处理程序&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;css-学习资源&#34;&gt;CSS 学习资源&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;MDN 查询关键字，遇到不会的 CSS 属性就去查阅MDN&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://css-tricks.com/&#34;&gt;CSS Tricks&lt;/a&gt;，可以根据属性搜索很多好看的CSS效果；&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/search?q=阮一峰+css&#34;&gt;Google: 阮一峰老师 css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.zhangxinxu.com/wordpress/category/css/page/25/&#34;&gt;张鑫旭大神的 240 多篇 CSS 博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tympanus.net/codrops/category/playground/&#34;&gt;Codrops 炫酷 CSS 效果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ituring.com.cn/book/1695&#34;&gt;CSS揭秘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cndevdocs.com/&#34;&gt;CSS 2.1 中文 spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google 搜索 CSS Generator ，可以生成css样式&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;css-开始写&#34;&gt;CSS 开始写&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;引入 CSS 的几种方式&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;行间 &lt;code&gt;&amp;lt;div style=&amp;quot;color:red;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;内联 &lt;code&gt;&amp;lt;style&amp;gt;div{color: red}&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;外部 &lt;code&gt;&amp;lt;link href=&amp;quot;index.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import引入&lt;/code&gt; &lt;code&gt;@import url(./index.css)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;布局小技巧&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;HTML&lt;/code&gt; 除 &lt;code&gt;div&lt;/code&gt; 与 &lt;code&gt;span&lt;/code&gt; 外，都有默认样式，所以在布局之前我们通常会清除一些标签的默认样式，如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;body,p,h1,h2,dl,dt {
margin: 0;
}
ul,ol {
list-style: none;
padding: 0;
margin: 0
}
/* 通常不建议这么写 *{margin: 0; margin: 0} */
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;清除浮动，如子级用浮动布局，则&lt;strong&gt;需给父级&lt;/strong&gt;添加浮动清除代码，代码通常写法，给父级添加 &lt;code&gt;clearfix&lt;/code&gt; 类选择器：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.clearfix::after{
content: &#39;&#39;;
clear: both;
display: block;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;chrome&lt;/code&gt; 浏览器默认字体大小 16px，默认间距 8px&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;一个元素的高度是由其内部 &lt;code&gt;文档流&lt;/code&gt; 的高度总和决定的&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;文档流&lt;/code&gt;就是文档内元素的流动方向&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;内联元素从左往右流动，如果流动遇到阻碍则换行继续，从左向右流动&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;块级元素，每一个块级元素独占一行，从上往下流动&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;CSS 属性值 &lt;code&gt;word-break:break-all&lt;/code&gt;， 可以将单词打断点，会把整个词分开断点，如下代码预览：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://jsbin.com/ketaxum/2/edit?html,css,output&#34;&gt;https://jsbin.com/ketaxum/2/edit?html,css,output&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS &lt;code&gt;float:left; positon:fixed; position:absolute&lt;/code&gt; 都能使元素脱离文档流&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;为什么内联元素中间会有一个空格的距离，因为内联元素之间如果有换行符或者空格存在，浏览器会解析为一个空格&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;每一个字体都有一个建议行高，默认的 &lt;code&gt;line-heigth&lt;/code&gt; 由字体设计师决定&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;CSS 中 &lt;code&gt;width&lt;/code&gt; 的默认值是 &lt;code&gt;auto&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;box-sizing:content-box&lt;/code&gt; 的 &lt;code&gt;width&lt;/code&gt; 不包含 &lt;code&gt;padding&lt;/code&gt; 与 &lt;code&gt;border&lt;/code&gt;，元素默认&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;box-sizing:border-box&lt;/code&gt; 的 &lt;code&gt;width&lt;/code&gt; 包含 &lt;code&gt;padding&lt;/code&gt; 与 &lt;code&gt;border&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在布局时，尽量不要给元素定义宽度和高度，会有很多不确定性，妙用 &lt;code&gt;max-width&lt;/code&gt; 与 &lt;code&gt;min-width&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;css-经典布局方式&#34;&gt;CSS 经典布局方式&lt;/h2&gt;

&lt;h3 id=&#34;两栏布局&#34;&gt;两栏布局&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法一：浮动布局&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;aside&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;main&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;div {
height: 500px;
}
.aside {
width: 300px;
background-color: #f60;
float: left;
}
.main {
background-color: green;
margin-left: 300px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;左侧栏固定宽度向左浮动，右侧主要内容用 &lt;code&gt;margin-left&lt;/code&gt; 留出左侧栏的宽度，默认宽度是&lt;code&gt;auto&lt;/code&gt;, 自动填满剩下宽度  &lt;a href=&#34;https://jsbin.com/ketaxum/4/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;右侧固定宽度，左侧自适应则是同理，只要将固定栏右浮动，使用 &lt;code&gt;margin-right&lt;/code&gt; 即可，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;  div {
    height: 500px;
  }
  .aside {
    width: 300px;
    background-color: #f60;
    float: right;
  }
  .main {
    background-color: green;
    margin-right: 300px;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法二：浮动布局 + 负外边距&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;clearfix&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;aside&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.clearfix::after {
content: &#39;&#39;;
display: block;
clear: both;
}
div {
height: 500px;
}
.aside {
width: 300px;
float: left;
margin-right: -100%;
background-color: #f60;
}
.main {
width: 100%;
float: left;
}
.main .content {
background-color: green;
margin-left: 300px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;左侧固定栏指定一个右侧的100%的负边距，为整个屏幕的宽度，这就使得main的最左侧与屏幕的最左侧对齐，此时的main的宽度是100%，因此需要其子内容content指定一个左侧的外边距空出左侧栏的位置，即左侧栏的宽度300px；适应一侧宽度为100%的布局 &lt;a href=&#34;https://jsbin.com/ketaxum/8/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法三：绝对定位&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;aside&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;main&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;body {
margin: 0;
}
div {
height: 500px;
}
.aside {
width: 300px;
position: absolute;
left: 0;
top: 0;
background-color: #f60;
}
.main {
background-color: green;
margin-left: 300px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;采用绝对定位，根据绝对定位脱离文档流的特性，&lt;a href=&#34;https://jsbin.com/ketaxum/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法四： flex 布局&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;cainter&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;aside&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;main&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;div {
height: 500px;
}
.cainter {
display: flex;
}
.aside {
flex: 0 0 300px;
background-color: #f60;
}
.main {
flex: 1 1;
background-color: green;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;弹性盒模型的方式是最简单的，如果不考虑浏览器兼容性的话，则可以使用此方法 &lt;a href=&#34;https://jsbin.com/ketaxum/13/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;三栏布局-左中右&#34;&gt;三栏布局(左中右)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;三栏布局的特点：两边定宽，然后中间的 &lt;code&gt;width&lt;/code&gt; 是 &lt;code&gt;auto&lt;/code&gt;, 可以自适应内容&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;方法一：用绝对定位的方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;原理则是，左侧和右侧布局用绝对定位分别定位在左侧和右侧，中间的布局则用 &lt;code&gt;margin-left&lt;/code&gt;  和 &lt;code&gt;margin-right&lt;/code&gt; 空出左右栏位置来，&lt;a href=&#34;https://jsbin.com/ketaxum/14/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;cainter&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;right&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;div {
  height: 500px;
}
.cainter {
  position: relative;
}
.left {
  position: absolute;
  top: 0;
  left: 0;
  width: 100px;
  background: red;
}
.right {
  position: absolute;
  top: 0;
  right: 0;
  width: 100px;
  background: green;
}
.center {
  background: yellow;
  margin-left: 100px;
  margin-right: 100px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于采用了绝对定位，所以在布局上三者的位置可以随意更换；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;方法二 使用 &lt;code&gt;float&lt;/code&gt; 属性&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;左右两栏使用 &lt;code&gt;float&lt;/code&gt; 属性，中间栏使用 &lt;code&gt;margin&lt;/code&gt; 属性撑开；&lt;a href=&#34;https://jsbin.com/ketaxum/18/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;  &amp;lt;div class=&amp;quot;cainter clearfix&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&amp;quot;right&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;  .clearfix::after {
    content: &#39;&#39;;
    display: block;
    clear: both;
  }
  div {
    height: 500px;
  }
  .cainter {
    position: relative;
  }
  .left {
    width: 100px;
    background: red;
    float: left;
  }
  .right {
    width: 100px;
    background: green;
    float: right;
  }
  .center {
    background: yellow;
    margin-left: 100px;
    margin-right: 100px;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;缺点：1. 当宽度小于左右两边宽度之和时，右侧栏会被挤下去；2. html结构不正确&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法三，浮动 + 负外边距 (双飞翼布局)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;三栏都采用左浮动&lt;/li&gt;
&lt;li&gt;中间栏也是左浮动，默认情况下由于前面中间栏 占据了 100% 的宽度，因此左侧是在另起一行显示，为左侧栏设置 &lt;code&gt;margin-left: -100%;&lt;/code&gt; 即整个屏幕的宽度100%，这就令左侧栏布局到中间栏的最左侧&lt;/li&gt;
&lt;li&gt;右侧栏也是左浮动，此时默认的情况下也是在中间栏的下一行，同样利用 &lt;code&gt;margin-left: -300px;&lt;/code&gt;  &lt;code&gt;300px&lt;/code&gt; 为右侧模块宽度，使其到上一行最右侧位置&lt;/li&gt;

&lt;li&gt;&lt;p&gt;中间栏内容部分则需要利用分别等于左右栏宽度外边距来空出它们的位置&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;cainter clearfix&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;center&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;main&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;right&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.clearfix::after {
content: &#39;&#39;;
display: block;
clear: both;
}
div {
height: 500px;
}
.cainter {
position: relative;
}
.center {
float: left;
width: 100%;
background: yellow;
}
.left {
float: left;
width: 200px;
margin-left: -100%;
background: green;
}
.right {
float: left;
width: 300px;
background: red;
margin-left: -300px;
}
.main {
margin-left: 200px;
margin-right: 300px;
}
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;这种方法的好处就是主体内容可以在前面优先加载；缺点：结构不正确，且多了一层标签 &lt;a href=&#34;https://jsbin.com/ketaxum/19/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法四： flex布局&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;middle&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;right&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;div {
height: 500px;
}
.container {
width: 100%;
display: flex;
}
  
.left {
width: 100px;
background: green;
}
.middle {
width: 100%;
background: yellow;
}
.right {
width: 100px;
background: red;
}
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;不考虑兼容性的话，最靠谱的一种方式 &lt;a href=&#34;https://jsbin.com/lerozex/2/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;css-垂直居中-水平居中方式&#34;&gt;CSS 垂直居中，水平居中方式&lt;/h2&gt;

&lt;h3 id=&#34;一-水平居中&#34;&gt;一、水平居中&lt;/h3&gt;

&lt;h4 id=&#34;1-行内元素水平居中&#34;&gt;1. 行内元素水平居中&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;text-align:center;&lt;/code&gt;&lt;/strong&gt; 可以实现块级元素内部的行内元素的的水平居中，此方法只对 &lt;code&gt;display:inline-block display:inlie; display:inline-table 和 display:inline-flex 元素水平居中有效&lt;/code&gt;，并且是给父级设置样式：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.parent {
  text-align: center;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;小技巧：如果是一个块级元素，我们可以先改变为 &lt;code&gt;display:inline-block;&lt;/code&gt; 就可以使用 &lt;code&gt;text-align:center;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;2-块级元素的水平居中&#34;&gt;2. 块级元素的水平居中&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将该元素的左右外边距设置为 &lt;code&gt;auto&lt;/code&gt; , 此方法必须是块级元素有宽度才可以，否则不起作用；&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.box {
width: 100px; // 宽度属性是必须的
margin: 0 auto;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;table + margin&lt;/code&gt; 先将子元素设置为块级表格显示，再将其居中，&lt;code&gt;display:table&lt;/code&gt; 在表现上类似 &lt;code&gt;block&lt;/code&gt; 元素，但是宽度为内容宽;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;Demo&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  .parent {
      border: 1px solid #ddd;
      height: 100px;
  }
  .child {
      display: table;
      margin: 0 auto;
      background: red;
  }
&amp;lt;/style&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;absolute + transform&lt;/code&gt;  先将父元素设置为相对定位，然后子元素设置为绝对定位，&lt;code&gt;left&lt;/code&gt; 值设置为 50% , 然后通过移动子元素的一半宽度即可&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;Demo&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  .parent {
      border: 1px solid #ddd;
      height: 100px;
      position: relative;
  }
  .child {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;transform&lt;/code&gt; 属于 &lt;code&gt;css3&lt;/code&gt; 内容，存在兼容性问题，高版本浏览器需加上前缀&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 flex + justify-content 给父级加&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;Demo&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
	.parent {
  display: flex;
  justify-content: center;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用flex+margin，通过flex将父容器设置为 &lt;code&gt;flex&lt;/code&gt; 布局，再设置子元素居中&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;Demo&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  .parent {
      display: flex;
  }
  .child {
      margin: 0 auto;
  }
&amp;lt;/style&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;3-多块级元素水平居中&#34;&gt;3. 多块级元素水平居中&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;利用弹性布局(flex)，实现水平居中，其中 &lt;code&gt;justify-content&lt;/code&gt; 用于设置弹性盒模型子元素在主轴(默认横屏)方向上的对齐方式,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;demo1&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;demo2&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;demo3&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  .parent {
      border: 1px solid #ddd;
      height: 100px;
      display: flex;
      justify-content: center;
  }
  .child {
      background: red;
      padding: 10px;
      margin: 10px;
  }
&amp;lt;/style&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://jsbin.com/luhokeh/3/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;利用inline-block ，子级全部设置为 &lt;code&gt;display:inline-block;&lt;/code&gt; 父级设置 &lt;code&gt;text-align:center;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;demo1&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;demo2&amp;lt;/div&amp;gt;
&amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;demo3&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  .parent {
      border: 1px solid #ddd;
      height: 100px;
      text-align: center;
  }
  .child {
      background: red;
      padding: 10px;
      margin: 10px;
      display: inline-block;
  }
&amp;lt;/style&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://jsbin.com/luhokeh/11/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;4-浮动元素水平居中&#34;&gt;4. 浮动元素水平居中&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;定宽的浮动元素，通过设置子元素 &lt;code&gt;relative + 负margin&lt;/code&gt;，原理如图：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/31/16c4609c428bc734?w=656&amp;amp;h=372&amp;amp;f=png&amp;amp;s=14836&#34; alt=&#34;gitHub&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jsbin.com/luhokeh/12/edit?html,css,output&#34;&gt;demo&lt;/a&gt;  &lt;strong&gt;注意：样式设置在浮动元素的本身&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不定宽的浮动元素，原理如图：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/31/16c4609c42a6b356?w=932&amp;amp;h=245&amp;amp;f=png&amp;amp;s=25160&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jsbin.com/luhokeh/20/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通用办法 &lt;code&gt;flex&lt;/code&gt; 布局&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
&amp;lt;span class=&amp;quot;chlid&amp;quot;&amp;gt;水平居中&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
	.parent {
      display:flex;
      justify-content:center;
  }
  .chlid{
      float: left;
      width: 200px;// 有无宽度不影响居中
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;5-绝对定位元素水平居中&#34;&gt;5. 绝对定位元素水平居中&lt;/h4&gt;

&lt;p&gt;通过子元素绝对定位，加上 &lt;code&gt;marging:0 auto&lt;/code&gt; 实现；&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jsbin.com/luhokeh/22/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;垂直居中&#34;&gt;垂直居中&lt;/h3&gt;

&lt;h4 id=&#34;1-单行内联元素重置居中&#34;&gt;1. 单行内联元素重置居中&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
  &amp;lt;span&amp;gt;单行文本元素垂直居中&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
    .box {
        height: 100px;
        line-height: 100px;
        border: 1px solid #ddd;
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-多行内联元素垂直居中&#34;&gt;2. 多行内联元素垂直居中&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;利用 flex 布局，实现垂直居中，其中 &lt;code&gt;flex-direction: column;&lt;/code&gt; 定义主轴方向为纵向&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
&amp;lt;p&amp;gt;多行文本实现居中，多行文本实现居中，多行文本实现居中，多行文本实现居中，    
  多行文本实现居中，多行文本实现居中，多行文本实现居中，多行文本实现居中，    
  多行文本实现居中，多行文本实现居中，多行文本实现居中，多行文本实现居中&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
.parent { 
  height: 140px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  border: 2px solid #ddd;
}
&amp;lt;/style&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://jsbin.com/kojipaq/1/edit?html,css,output&#34;&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;利用表格布局， &lt;code&gt;vertical-align: middle&lt;/code&gt; 可以实现子元素的垂直居中&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt; 
	&amp;lt;p&amp;gt;多行文本实现居中，多行文本实现居中，多行文本实现居中，多行文本实现居中，    
  多行文本实现居中，多行文本实现居中，多行文本实现居中，多行文本实现居中，    
  多行文本实现居中，多行文本实现居中，多行文本实现居中，多行文本实现居中&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
.parent { 
  height: 140px;
  border: 2px solid #ddd;
  display: table;
}
.child {
  display: table-cell;
  vertical-align: middle;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;3-块级元素垂直居中&#34;&gt;3. 块级元素垂直居中&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;absolute + 负 maring&lt;/code&gt;  前提是已知模块的宽度和高度, 与绝对定位的水平居中遥相呼应，是平时用的多的布局方式；&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;固定高度的块级元素垂直居中。&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
	.parent {
      position: relative;
  }
  .child {
      position: absolute;
      top: 50%;
      height: 100px;
      margin-top: -50px;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;absolute + transform&lt;/code&gt; 此方法适用于高度和宽度未知时&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;固定高度的块级元素垂直居中。&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
	.parent {
      position: relative;
  }
  .child {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
  }
&amp;lt;/style&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;flex + alig-items&lt;/code&gt; 与做水平居中的 &lt;code&gt;flex + justify-content:center;&lt;/code&gt; 对应，是目前布局经常用的，有兼容性问题；&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;parent&amp;quot;&amp;gt;
 &amp;lt;div class=&amp;quot;child&amp;quot;&amp;gt;未知高度的块级元素垂直居中。&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
.parent {
 display:flex;
 align-items:center;
}
&amp;lt;/style&amp;gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;三-水平垂直居中&#34;&gt;三、水平垂直居中&lt;/h3&gt;

&lt;p&gt;常用的适合没有兼容问题或者没有定宽高的布局&lt;/p&gt;

&lt;h4 id=&#34;方法1-绝对定位与负边距实现-已知宽高&#34;&gt;方法1：绝对定位与负边距实现 (已知宽高)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&#39;container&#39;&amp;gt;
  &amp;lt;div id=&#39;center&#39; style=&amp;quot;width: 100px;height: 100px;background-color: #666&amp;quot;&amp;gt;center&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  #container {
    position: relative;
  }
  #center {
    position: absolute;
    top: 50%;
    left: 50%;
    margin: -50px 0 0 -50px;
  }
&amp;lt;/style&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法2-绝对定位与-margin-auto-已知宽高&#34;&gt;方法2： 绝对定位与 margin:auto (已知宽高)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&#39;container&#39;&amp;gt;
  &amp;lt;div id=&#39;center&#39; style=&amp;quot;width: 100px;height: 100px;background-color: #666&amp;quot;&amp;gt;center&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  #container {
    position: relative;
  }
  #center {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto; // 此处是重要写法
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法3-绝对定位-css3-未知宽高-不考虑兼容性的话-此方法非常舒服&#34;&gt;方法3： 绝对定位 + CSS3 (未知宽高) 不考虑兼容性的话 此方法非常舒服&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&#39;container&#39;&amp;gt;
  &amp;lt;div id=&#39;center&#39; style=&amp;quot;background-color: #666&amp;quot;&amp;gt;center&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  #container {
    position: relative;
  }
  #center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;方法4-flex-布局-移动端常用-pc不考虑兼容可用&#34;&gt;方法4： flex 布局 移动端常用，pc不考虑兼容可用&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&#39;container&#39;&amp;gt;
  &amp;lt;div id=&#39;center&#39; style=&amp;quot;width: 100px;height: 100px;background-color: #666&amp;quot;&amp;gt;center&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;style&amp;gt;
  #container {
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;

&lt;p&gt;这篇总结也是站在一些前辈(大神)的基础上总结的一些技巧、方法，他们的文章教会了我很多，学到了很多！希望以后可以达到他们所在的成就，加油吧！持续不断的学习（折腾！！！）&lt;br /&gt;
CSS 的学习是由易到难，越往后学，越觉得CSS的难点所在，所以不管是在平时的工作中还是在自己折腾的项目中都是需要重视CSS的书写，多多的尝试一些新的CSS属性以及更多的CSS布局，多多的总结吧！&lt;/p&gt;

&lt;h2 id=&#34;参考文章&#34;&gt;参考文章&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ljianshu/Blog/issues/29&#34;&gt;如何居中一个元素(终结版)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/crystal6918/article/details/55224670&#34;&gt;CSS 两栏布局，三栏布局&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000011358507#articleHeader6&#34;&gt;CSS 布局说&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML 是什么</title>
      <link>https://jinchao1992.github.io/post/html-%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Sun, 11 Aug 2019 14:25:39 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/html-%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      
        <description>

&lt;p&gt;HTML (英语：HyperText Markup Language)  超文本编辑语言，是整个网站的基石，所以学好 &lt;code&gt;HTML&lt;/code&gt; 非常重要，并且我们要学会使用 &lt;strong&gt;语义化&lt;/strong&gt;的标签来书写 &lt;code&gt;HTML&lt;/code&gt; 标签，接下来我们来一一介绍 &lt;code&gt;HTML&lt;/code&gt; 标签。&lt;/p&gt;

&lt;p&gt;首先来了解下 &lt;code&gt;W3C&lt;/code&gt; 和 &lt;code&gt;MDN&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;w3c-简介&#34;&gt;W3C 简介&lt;/h3&gt;

&lt;h4 id=&#34;w3c-是什么&#34;&gt;w3c 是什么？&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;万维网联盟 (英语：&lt;strong&gt;W&lt;/strong&gt;orld &lt;strong&gt;W&lt;/strong&gt;ide &lt;strong&gt;W&lt;/strong&gt;eb &lt;strong&gt;C&lt;/strong&gt;onsortium，缩写是 &lt;strong&gt;W3C&lt;/strong&gt; )，由李爵士 (蒂姆·伯纳斯-李) 于1994年创立。&lt;/p&gt;

&lt;h4 id=&#34;w3c-标准制定&#34;&gt;W3C 标准制定&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;为解决网络中应用中不同平台、技术和开发者带来的不兼容问题，保障网络信息的顺利和完整流通，万维网制定了一系列标准并督促网络应用开发者和内容提供者遵循这些标准。W3C 制定的网络标准并非强制，只是推荐标准。现在浏览器厂商基本都是基于这些标准解析网页。&lt;/p&gt;

&lt;h3 id=&#34;mdn-简介&#34;&gt;MDN 简介&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;MDN Web Docs&lt;/strong&gt; (旧称MozillaDeveloper Network、Mozilla Developer Center, 简称MDN) 是汇集众多网络技术开发文档的免费网站。&lt;/p&gt;

&lt;p&gt;该项目于2005年，最初是由Mozilla(网景) 公司员工创建。&lt;/p&gt;

&lt;h3 id=&#34;html-简介&#34;&gt;HTML 简介&lt;/h3&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;HTML 的版本

&lt;ol&gt;
&lt;li&gt;HTML 4.01&lt;/li&gt;
&lt;li&gt;XHTML&lt;/li&gt;
&lt;li&gt;HTML5&lt;/li&gt;
&lt;li&gt;HTML5.1&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;规范文档

&lt;ol&gt;
&lt;li&gt;由 W3C 写文档&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;DOCTYPE

&lt;ol&gt;
&lt;li&gt;用来选择文档类型&lt;/li&gt;
&lt;li&gt;除了 HTML5 的 DOCTYPE，比较方便，其他请参考 &lt;a href=&#34;https://www.w3.org/QA/2002/04/valid-dtd-list.html&#34;&gt;https://www.w3.org/QA/2002/04/valid-dtd-list.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTML5 的声明规范是 &amp;lt;!DOCTYPE html&amp;gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;html-标签&#34;&gt;HTML 标签&lt;/h4&gt;

&lt;p&gt;注意：所有标签都需闭合如：&lt;head&gt;&lt;/head&gt;、&lt;img /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&#34;根元素&#34;&gt;根元素&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&#34;文档元数据&#34;&gt;文档元数据&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 为页面上的所有链接规定默认的地址或者默认的目标，可以是相对的，也可以是绝对的，一份代码中只允许一个 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 标签，请看示例代码：来源：&lt;a href=&#34;http://www.w3school.com.cn/tiy/t.asp?f=html_base_test&#34;&gt;w3school&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;base href=&amp;quot;http://www.w3school.com.cn/i/&amp;quot; /&amp;gt;
&amp;lt;base target=&amp;quot;_blank&amp;quot; /&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
&amp;lt;img src=&amp;quot;eg_smile.gif&amp;quot; /&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;p&amp;gt;请注意，我们已经为图像规定了一个相对地址。由于我们已经在 head 部分规定了一个基准 URL，浏览器将在如下地址寻找图片：&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;quot;http://www.w3school.com.cn/i/eg_smile.gif&amp;quot;&amp;lt;/p&amp;gt;

&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.w3school.com.cn&amp;quot;&amp;gt;W3School&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;请注意，链接会在新窗口中打开，即使链接中没有 target=&amp;quot;_blank&amp;quot; 属性。这是因为 base 元素的 target 属性已经被设置为 &amp;quot;_blank&amp;quot; 了。&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;head&lt;/code&gt; 规定文档的配置信息，包括文档标题，文档样式和脚本等&lt;/p&gt;

&lt;p&gt;&lt;code&gt;link&lt;/code&gt; 常用于文档链接外部样式&lt;/p&gt;

&lt;p&gt;&lt;code&gt;meta&lt;/code&gt;  可以用于设置移动端视口信息，设置字符集等&lt;/p&gt;

&lt;p&gt;&lt;code&gt;style&lt;/code&gt; 放置 &lt;code&gt;css&lt;/code&gt; 样式代码&lt;/p&gt;

&lt;p&gt;&lt;code&gt;title&lt;/code&gt; 定义文档的标题，显示在浏览器器窗口里&lt;/p&gt;

&lt;h5 id=&#34;分区根元素&#34;&gt;分区根元素&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;body&lt;/code&gt; 所有主体标签全部都在 &lt;code&gt;body&lt;/code&gt; 中&lt;/p&gt;

&lt;h5 id=&#34;内容分区&#34;&gt;内容分区&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;address&lt;/code&gt; 提供某个人或者某个组织的联系信息，通常都包含在此标签内&lt;/p&gt;

&lt;p&gt;&lt;code&gt;article&lt;/code&gt; 文档、页面、应用或网站中的独立结构&lt;/p&gt;

&lt;p&gt;&lt;code&gt;aside&lt;/code&gt; 表示和页面中其他没有任何关系的部分，可以单独拆分出来而不影响整体；&lt;/p&gt;

&lt;p&gt;&lt;code&gt;footer&lt;/code&gt; 页脚内容，比如网站友链 关于我们等&lt;/p&gt;

&lt;p&gt;&lt;code&gt;header&lt;/code&gt; 介绍性内容，包含导航 logo 等&lt;/p&gt;

&lt;p&gt;&lt;code&gt;h1 - h6&lt;/code&gt; 表示标题&lt;/p&gt;

&lt;p&gt;&lt;code&gt;main&lt;/code&gt; 主体部分，网站主体部分&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nav&lt;/code&gt; 网页头部导航条，跳转二级页等&lt;/p&gt;

&lt;p&gt;&lt;code&gt;section&lt;/code&gt; 文档中的一个区域&lt;/p&gt;

&lt;h5 id=&#34;文本内容&#34;&gt;文本内容&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;dd&lt;/code&gt;  描述列表中的一个术语描述，只会在描述列表中出现，并且必须跟 &lt;code&gt;dt&lt;/code&gt; 元素&lt;/p&gt;

&lt;p&gt;&lt;code&gt;div&lt;/code&gt;  容器元素没有任何定义，可以用 &lt;code&gt;class&lt;/code&gt; 和 &lt;code&gt;id&lt;/code&gt; 进行区分&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dl&lt;/code&gt; 描述列表，通常用于 键-值对的表示&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dt&lt;/code&gt; 描述列表中的键&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hr&lt;/code&gt;  水平分割线，语义上的，并非是样式上的&lt;/p&gt;

&lt;p&gt;&lt;code&gt;li&lt;/code&gt; 列表里的条目&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ol&lt;/code&gt; 有序列表&lt;/p&gt;

&lt;p&gt;&lt;code&gt;p&lt;/code&gt; 文本的一个段落&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pre&lt;/code&gt; 预定义的格式文本&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ul&lt;/code&gt; 无序列表&lt;/p&gt;

&lt;h5 id=&#34;内联文本语义&#34;&gt;内联文本语义&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;a&lt;/code&gt; 超链接，可以是 网页、文件、电话、邮件地址等&lt;/p&gt;

&lt;p&gt;&lt;code&gt;b&lt;/code&gt; 粗体元素，用于样式上的&lt;/p&gt;

&lt;p&gt;&lt;code&gt;br&lt;/code&gt;  强制换行&lt;/p&gt;

&lt;p&gt;&lt;code&gt;code&lt;/code&gt; 展示一段计算机代码&lt;/p&gt;

&lt;p&gt;&lt;code&gt;em&lt;/code&gt; 着重标识&lt;/p&gt;

&lt;p&gt;&lt;code&gt;i&lt;/code&gt; 斜体标识&lt;/p&gt;

&lt;p&gt;&lt;code&gt;kbd&lt;/code&gt; HTML 输入键盘字符&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mark&lt;/code&gt; 表示凸显的文字信息，如搜索结果里的关键词等&lt;/p&gt;

&lt;p&gt;&lt;code&gt;small&lt;/code&gt; 字体变小&lt;/p&gt;

&lt;p&gt;&lt;code&gt;span&lt;/code&gt;  没有特别意义，通常用来表示行内元素&lt;/p&gt;

&lt;p&gt;&lt;code&gt;strong&lt;/code&gt; 文本十分重要，语义上的加粗&lt;/p&gt;

&lt;p&gt;&lt;code&gt;time&lt;/code&gt; 用来表示时间&lt;/p&gt;

&lt;h5 id=&#34;图片和多媒体元素&#34;&gt;图片和多媒体元素&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;area&lt;/code&gt; 热点区域，可以关联一个超链接&lt;/p&gt;

&lt;p&gt;&lt;code&gt;audio&lt;/code&gt; 用于放置音频&lt;/p&gt;

&lt;p&gt;&lt;code&gt;video&lt;/code&gt; 用于放置视频&lt;/p&gt;

&lt;p&gt;&lt;code&gt;img&lt;/code&gt; 可以链接图像&lt;/p&gt;

&lt;p&gt;&lt;code&gt;map&lt;/code&gt; 与 &lt;code&gt;area&lt;/code&gt; 结合使用，绘制热区&lt;/p&gt;

&lt;h5 id=&#34;脚本&#34;&gt;脚本&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;canvas&lt;/code&gt; 通过脚本来绘制图形，实现动画等，一个画布&lt;/p&gt;

&lt;p&gt;&lt;code&gt;noscript&lt;/code&gt; 如果页面上的脚本类型不受支持或者当前浏览器关闭了脚本，则在 HTML 中使用 &lt;code&gt;noscript&lt;/code&gt;中的替代内容&lt;/p&gt;

&lt;p&gt;&lt;code&gt;script&lt;/code&gt; 嵌入或者引用可执行脚本&lt;/p&gt;

&lt;h5 id=&#34;表格内容&#34;&gt;表格内容&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;col&lt;/code&gt; 定义表格中的列，并用于所有公共单元格上的公共语义，结合 &lt;code&gt;colgrpup&lt;/code&gt; 使用&lt;/p&gt;

&lt;p&gt;&lt;code&gt;colgroup&lt;/code&gt; 表格列组&lt;/p&gt;

&lt;p&gt;&lt;code&gt;table&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tbody&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;td&lt;/code&gt; 一列&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tfoot&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;th&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;thead&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tr&lt;/code&gt; 一行&lt;/p&gt;

&lt;h5 id=&#34;表单&#34;&gt;表单&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;button&lt;/code&gt; 按钮&lt;/p&gt;

&lt;p&gt;&lt;code&gt;form&lt;/code&gt; 表单文档区域，可以提交信息&lt;/p&gt;

&lt;p&gt;&lt;code&gt;input&lt;/code&gt; 表单输入，如 文本框 单选框 多选框等&lt;/p&gt;

&lt;p&gt;&lt;code&gt;label&lt;/code&gt; 表示用户界面某个元素的说明&lt;/p&gt;

&lt;p&gt;&lt;code&gt;option&lt;/code&gt;  结合 &lt;code&gt;select&lt;/code&gt; 使用，下拉框&lt;/p&gt;

&lt;p&gt;&lt;code&gt;textarea&lt;/code&gt; 文本域，多行文本&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;什么是空标签&#34;&gt;什么是空标签&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;在 HTML 元素中，没有内容的就是 空元素，空元素通常都是单标签元素，HTML 包含以下的空元素：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;keygen&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;param&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;wbr&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;什么是可替换元素&#34;&gt;什么是可替换元素&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;在 css 中，可替换元素的展示效果不是由 css 来控制的。&lt;/p&gt;

&lt;p&gt;css 可以影响可替换元素的位置，但是不会影响到可替换元素本身的内容。&lt;/p&gt;

&lt;p&gt;典型的可替换元素：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;有些元素在特定情况下被视作可替换元素：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;...&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;重点介绍标签&#34;&gt;重点介绍标签&lt;/h3&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;iframe-标签&#34;&gt;iframe 标签&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;src&lt;/code&gt; 属性，可以嵌入打开的地址，可以是相对的也可以是网址，如：&lt;code&gt;&amp;lt;iframe src=&amp;quot;https://qq.com&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;frameborder&lt;/code&gt; 属性，设置为 &lt;code&gt;0&lt;/code&gt; 可以去除 &lt;code&gt;iframe&lt;/code&gt; 的默认样式, 如：&lt;code&gt;&amp;lt;ifrmae src=&amp;quot;https://qq.com&amp;quot; frameborder=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;name&lt;/code&gt; 属性，如果设置一个 &lt;code&gt;name&lt;/code&gt; 值，则可以结合 &lt;code&gt;a&lt;/code&gt; 标签使用；如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;iframe name=&amp;quot;xxx&amp;quot; src=&amp;quot;#&amp;quot; frameborder=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;
&amp;lt;a href=&amp;quot;http://qq.com&amp;quot; target=&amp;quot;xxx&amp;quot;&amp;gt;在ifrme中打开qq.com&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;a-标签&#34;&gt;a 标签&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;target&lt;/code&gt; 属性

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_top&lt;/code&gt; 在顶层窗口打开页面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_blank&lt;/code&gt; 在新窗口打开页面&lt;/li&gt;
&lt;li&gt;_self 在本窗口打开页面&lt;/li&gt;
&lt;li&gt;_parent  在父级窗口打开页面&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;download&lt;/code&gt; 属性 提供下载，根据&lt;code&gt;http&lt;/code&gt;响应提供的 &lt;code&gt;content-type&lt;/code&gt; 属性可以直接下载文件，当值为 &lt;code&gt;application/octet-stream&lt;/code&gt; 可以直接下载&lt;/li&gt;
&lt;li&gt;&lt;code&gt;href&lt;/code&gt; 属性 链接到的地址，值可以为：

&lt;ul&gt;
&lt;li&gt;网址，网址可以是 &lt;code&gt;http&lt;/code&gt; 协议，或者当前添加一个相对路径，当前是什么协议就走什么协议&lt;/li&gt;
&lt;li&gt;可以发起请求，通常是 &lt;code&gt;get&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可以是一个伪协议，如: &lt;code&gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可以是一个查询字符串，如：&lt;code&gt;&amp;lt;a href=&amp;quot;?name=aaa&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; 发起 &lt;code&gt;get&lt;/code&gt; 请求&lt;/li&gt;
&lt;li&gt;可以是一个锚点，如：&lt;code&gt;&amp;lt;a href=&amp;quot;#bbb&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;，单独写&lt;code&gt;#&lt;/code&gt;的话会出现回到顶部效果；&lt;/li&gt;
&lt;li&gt;可以是一个空字符，如果是空字符串的话，则会刷新页面；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详情请查看 &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;form-标签&#34;&gt;form 标签&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;form&lt;/code&gt; 标签发起 &lt;code&gt;post&lt;/code&gt;请求，可以使用 &lt;code&gt;method&lt;/code&gt; 规定请求方式，默认是 &lt;code&gt;get&lt;/code&gt; 提交&lt;/li&gt;
&lt;li&gt;&lt;code&gt;action&lt;/code&gt; 设置请求地址，如：&lt;code&gt;&amp;lt;form action=&amp;quot;./index2.html&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;target&lt;/code&gt; 窗口打开方式，与 超链接打开方式一致&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;form-子级&#34;&gt;form 子级&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;重点：如果一个form表单中只有一个按钮（&lt;code&gt;button&lt;/code&gt;）,那么会自动升级为提交按钮，form表单必须有提交按钮才可以提交，也就是&lt;code&gt;&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;提交&amp;quot;&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;更多请查看：&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;table-标签&#34;&gt;table 标签&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;table&lt;/code&gt; 用于展示数据，注意：当 &lt;code&gt;thead tbody tfoot&lt;/code&gt; 同时存在时，前后书写顺序不会影响展示效果；&lt;/p&gt;

&lt;p&gt;详细属性请查看：&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/table&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/table&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;2019-07-19-更新&#34;&gt;2019/07/19 更新&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;标签 tabindex 属性&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/tabindex&#34;&gt;MDN&lt;/a&gt; 解释：&lt;code&gt;tabindex&lt;/code&gt; 全局属性 指示其元素是否可以聚焦，以及它是否/在何处参与顺序键盘导航。&lt;/p&gt;

&lt;p&gt;接受一个整数作为值，整数的值不同，结果也会展示不同：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tabindex=负值&lt;/code&gt; 通常是 &lt;code&gt;tabindex=&amp;quot;-1&amp;quot;&lt;/code&gt; , 表示元素是可聚焦的，但是不能通过键盘导航来访问该元素，也就是&lt;code&gt;Tab&lt;/code&gt; 键；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tabindex=&amp;quot;0&amp;quot;&lt;/code&gt; , 表示元素是可聚焦的，并且可以通过键盘导航来聚焦到该元素，它的相对顺序是当前处于的 &lt;code&gt;DOM&lt;/code&gt; 解构来决定的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tabindex=正值&lt;/code&gt; 表示元素可聚焦，可以通过键盘导航来聚焦到该元素；它的相对顺序按照 &lt;code&gt;tabindex&lt;/code&gt; 的数值&lt;strong&gt;递增而滞后聚焦&lt;/strong&gt;。 如果多个元素拥有相同的 &lt;code&gt;tabindex&lt;/code&gt; , 它们的相对顺序按照它们在当前 &lt;code&gt;DOM&lt;/code&gt; 中的先后顺序决定。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;根据键盘序列导航的顺序，值为 &lt;code&gt;0&lt;/code&gt; 、非法值、或者没有 &lt;code&gt;tabindex&lt;/code&gt;值的元素应该放置在 &lt;code&gt;tabindex&lt;/code&gt; 值为正值的元素后面。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：tabindex 的最大值不应该超过 32767。如果没有指定，默认值为 -1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;2019-07-24-更新&#34;&gt;2019/07/24 更新&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;使用标题元素的注意事项：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;h1&amp;gt; - &amp;lt;h6&amp;gt;&lt;/code&gt; 呈现了六个不同级别的标题，&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 级别最高，&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; 级别最低；&lt;/li&gt;
&lt;li&gt;不能为了减少标题的的字体大小而使用低级别的标题，如果需减少字体大小，需使用 &lt;code&gt;css&lt;/code&gt;  &lt;code&gt;font-size&lt;/code&gt; 属性；&lt;/li&gt;
&lt;li&gt;避免跳过某级标题，始终要从 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 开始，接下来依次使用 &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; 等；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 标签只允许在页面上出现一次，所以在使用 &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; 时，可以用 &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; 开始；&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;HTML 常用的标签就是以上几种了，是不是很多，当然我们在平时的布局网页中，要尽量使用语义化的标签，要多参考大牛们写的网页，或者著名网站的源代码，这样在我们未来切图上才会积累起来更多的布局风格以及标签的用法，加油！&lt;/p&gt;

&lt;h3 id=&#34;参考文档&#34;&gt;参考文档&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element&#34;&gt;HTML元素参考&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element&#34;&gt;可替换元素&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[HTML空标签](&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>互联网的基石 HTTP入门</title>
      <link>https://jinchao1992.github.io/post/%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E5%9F%BA%E7%9F%B3-http%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 11 Aug 2019 14:24:02 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E5%9F%BA%E7%9F%B3-http%E5%85%A5%E9%97%A8/</guid>
      
        <description>

&lt;h3 id=&#34;互联网的基石&#34;&gt;互联网的基石&lt;/h3&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;www-的历史&#34;&gt;www 的历史&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;WWW&lt;/code&gt; 全称 &lt;code&gt;World Wide Web&lt;/code&gt; 翻译成中文则是 全世界范围网络。&lt;/p&gt;

&lt;p&gt;如下图所示，简单的介绍下 www 的来历：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be98d6cd6b590b?w=839&amp;amp;h=568&amp;amp;f=png&amp;amp;s=82012&#34; alt=&#34;&#34; /&gt;
&lt;code&gt;URL&lt;/code&gt; 解释&lt;/p&gt;

&lt;p&gt;&lt;code&gt;https://www.baidu.com/s?wd=hello#5&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https&lt;/code&gt; 协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www.baidu.com&lt;/code&gt; 网址

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.com .cn .net...&lt;/code&gt; 顶级域名(一级)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;baidu.com&lt;/code&gt; 二级域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;www.baidu.com&lt;/code&gt; 三级域名&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;请求与相应&#34;&gt;请求与相应&lt;/h3&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;请求与响应介绍&#34;&gt;请求与响应介绍：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be98e1accacff2?w=1362&amp;amp;h=471&amp;amp;f=png&amp;amp;s=108472&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;通过命令的方式请求与返回&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be99296942f7f4?w=761&amp;amp;h=517&amp;amp;f=png&amp;amp;s=533230&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be992d215c99cc?w=729&amp;amp;h=513&amp;amp;f=png&amp;amp;s=566120&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;chrome-如何查看请求内容&#34;&gt;Chrome 如何查看请求内容&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;打开 Network(f12, 鼠标右键审查元素) 如下图:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be98ee9ef14ea7?w=1433&amp;amp;h=322&amp;amp;f=png&amp;amp;s=67183&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;地址栏输入网址&lt;/li&gt;
&lt;li&gt;在 Network 点击 Request Headers 并点击 &lt;strong&gt;view sorce&lt;/strong&gt;， 如图：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be98f86b5abd60?w=1438&amp;amp;h=537&amp;amp;f=png&amp;amp;s=200310&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;可以看到我们所请求的内容了，如下图：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be98fc22bfa40b?w=1406&amp;amp;h=551&amp;amp;f=png&amp;amp;s=199369&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be99018305137a?w=1035&amp;amp;h=543&amp;amp;f=png&amp;amp;s=171247&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;chrome-查看响应内容&#34;&gt;Chrome 查看响应内容&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;打开Network 与 请求一样&lt;/li&gt;
&lt;li&gt;地址栏输入网址&lt;/li&gt;
&lt;li&gt;选中一个响应的内容，查看 Response Headers ,点击 &lt;strong&gt;view source&lt;/strong&gt; 如下图：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/13/16be9908d7bdbe7e?w=904&amp;amp;h=333&amp;amp;f=png&amp;amp;s=71903&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;响应状态码&#34;&gt;响应状态码&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;1xx 不经常用，了解即可&lt;/li&gt;
&lt;li&gt;2xx 成功

&lt;ul&gt;
&lt;li&gt;200 请求成功&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;3xx 重定向&lt;/li&gt;
&lt;li&gt;4xx 客户端错误

&lt;ul&gt;
&lt;li&gt;404 找不到资源&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;5xx 服务器错误

&lt;ul&gt;
&lt;li&gt;500 通用错误信息&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;只是工作中用到的比较常用的，需要了解更多的参考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81&#34;&gt;维基百科 状态码解析&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/http/http-status-codes.html&#34;&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;curl-的用法&#34;&gt;curl 的用法&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;curl -s -v -H &amp;quot;请求头&amp;quot; -- &amp;quot;网址&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-s 不显示进度&lt;/li&gt;
&lt;li&gt;-v 显示请求响应&lt;/li&gt;
&lt;li&gt;-H 请求头&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;curl -X POST -d &#39;参数&#39; -s -v -H &#39;请求头&#39; -- &amp;quot;网址&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-X 后跟着 请求方式&lt;/li&gt;
&lt;li&gt;-d 后跟着 参数&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>常用的git命令</title>
      <link>https://jinchao1992.github.io/post/%E5%B8%B8%E7%94%A8%E7%9A%84git%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 11 Aug 2019 14:22:56 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E5%B8%B8%E7%94%A8%E7%9A%84git%E5%91%BD%E4%BB%A4/</guid>
      
        <description>

&lt;p&gt;在工作中，经常用到 &lt;code&gt;git&lt;/code&gt; , 不管托管在 &lt;code&gt;gitHub&lt;/code&gt; 还是 &lt;code&gt;gitLab&lt;/code&gt; 或者 &lt;code&gt;码云&lt;/code&gt;，平时都是用可视化工具进行提交、推送，并没有用太多的命令进行操作。作为一个程序员，当然要学会用命令做东西啦，简单的记录下 &lt;code&gt;git&lt;/code&gt; 日常命令，如果需要了解更多，请点击文章最下方链接进行访问。&lt;/p&gt;

&lt;h3 id=&#34;配置-github&#34;&gt;配置 GItHub&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;首先进入&lt;code&gt;gitHub&lt;/code&gt; &lt;code&gt;ssh&lt;/code&gt;设置页 &lt;a href=&#34;https://github.com/settings/keys&#34;&gt;https://github.com/settings/keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;如果页面里面已经有了 可以点击 「delete」按钮把这些 &lt;code&gt;key&lt;/code&gt; 先删除掉&lt;/li&gt;
&lt;li&gt;点击 &lt;code&gt;New SSH key&lt;/code&gt; ，进行创建，需要输入&lt;code&gt;Title&lt;/code&gt; 和 &lt;code&gt;Key&lt;/code&gt; , 我们目前没有 &lt;code&gt;key&lt;/code&gt; , 往下看；&lt;/li&gt;
&lt;li&gt;打开命令行工具&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复制&lt;/strong&gt;并运行 &lt;code&gt;rm -rf ~/.ssh/*&lt;/code&gt; 把现有的 &lt;code&gt;ssh key&lt;/code&gt; 都删除掉，&lt;strong&gt;注意不要打错一个字母哦&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;按回车三次，直到结束命令&lt;/li&gt;
&lt;li&gt;运行 &lt;code&gt;cat ~/.ssh/id_rsa.pub&lt;/code&gt; ，得到一串代码，完整的复制这串代码；&lt;/li&gt;
&lt;li&gt;粘贴在我们创建的 &lt;code&gt;gitHub Key&lt;/code&gt; 中，然后点击 &lt;code&gt;Add SSH key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;回到命令行工具，运行 &lt;code&gt;ssh -T git@github.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果您看到 &lt;code&gt;Hi jinchao1992! You&#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/code&gt; 证明我们生成 &lt;code&gt;SSH Key&lt;/code&gt; 成功，如果提示别的，重复上述步骤再来一遍；&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;注意&#34;&gt;注意&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;一台电脑只需要一个 &lt;code&gt;SSH Key&lt;/code&gt;, 如果你换电脑了就需要重新生成 &lt;code&gt;key&lt;/code&gt;，生成一个新的，再加到 &lt;code&gt;gitHub&lt;/code&gt; 即可，不需要把之前的删除，可以跟之前的共存，这样我们两台电脑都可以用了；&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;配置-git&#34;&gt;配置 git&lt;/h3&gt;

&lt;p&gt;一共需要五行命令&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git config --global user.name 你的英文名&lt;/code&gt;  &lt;strong&gt;设置用户名&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global user.email 你的邮箱&lt;/code&gt; &lt;strong&gt;设置邮箱&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global push.default matching&lt;/code&gt;  &lt;strong&gt;&lt;code&gt;push&lt;/code&gt; 所有本地分支到远程仓库对应匹配的分支&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global core.quotepath false&lt;/code&gt; 使用 &lt;strong&gt;&lt;code&gt;gitHub&lt;/code&gt; 默认转义&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global core.editor &amp;quot;vim&amp;quot;&lt;/code&gt; &lt;strong&gt;设置vim 为git默认编辑器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;使用-git&#34;&gt;使用 git&lt;/h3&gt;

&lt;p&gt;使用 &lt;code&gt;git&lt;/code&gt; 有三种方式，具体如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;只在本地使用&lt;/li&gt;
&lt;li&gt;将本地仓库上传到 &lt;code&gt;GitHub&lt;/code&gt;或者 &lt;code&gt;码云&lt;/code&gt; 等远程仓库；&lt;/li&gt;
&lt;li&gt;直接从远程仓库下载 常用 &lt;code&gt;GitHub&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;只在本地使用&#34;&gt;只在本地使用&lt;/h4&gt;

&lt;hr /&gt;

&lt;h4 id=&#34;1-1-初始化仓库&#34;&gt;1.1 初始化仓库&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;我们首先建立一个测试目录 ：&lt;code&gt;mkdir git-demo-01&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;进入目录 &lt;code&gt;cd git-demo-01&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;git init&lt;/code&gt; 初始化 &lt;code&gt;git&lt;/code&gt; 会在我们当前的目录里 增加一个 &lt;code&gt;.git&lt;/code&gt; 隐藏目录&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ls -la&lt;/code&gt; 可以具体看到这个目录名字，&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在 &lt;code&gt;git-demo-01&lt;/code&gt; 目录里面添加任意文件，我们先添加两个文件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;touch index.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch js/main.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;运行 &lt;code&gt;git status -sb&lt;/code&gt; 可以看到文件前面有两个 ?? 号&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;## Initial commit on master
?? js/
?? index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以使用 &lt;code&gt;git add&lt;/code&gt; 命令将文件添加到 &lt;strong&gt;暂存区&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;我们可以一个一个文件地 &lt;code&gt;add&lt;/code&gt; ，当然在工作中，我们当然不可能是这样了，也可以一次性 &lt;code&gt;add&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; 意思是当前目录(.表示当前目录) 里面变动都记在暂存区；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;再次运行  &lt;code&gt;git status -sb&lt;/code&gt; ，可以看到 ?? 变成了 A&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;## Initial commit on master
A js/
A index.html
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A 的意思就是添加，告诉 &lt;code&gt;git&lt;/code&gt; ，这些文件我要加在仓库里面；&lt;/p&gt;

&lt;p&gt;9 .  使用 &lt;code&gt;git commit -m &amp;quot;提交信息&amp;quot;&lt;/code&gt; 可以将我们 &lt;code&gt;add&lt;/code&gt; 过的内容正式提交 到&lt;strong&gt;本地仓库（.git 就是本地仓库）&lt;/strong&gt; ，并可以添加一些注释信息，方便我们日后查看；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可以一个个 &lt;code&gt;commit&lt;/code&gt; , 也可以一次性 &lt;code&gt;commit&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git commit index.html -m &amp;quot;添加html&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit . -m &amp;quot;添加好多个文件&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;再次运行 &lt;code&gt;git status -sb&lt;/code&gt; 发现并没有其他改动了，所有文件都提交到本地仓库了&lt;/li&gt;
&lt;li&gt;我们还可以使用 &lt;code&gt;git log&lt;/code&gt; 看到历史变动&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;1-2-文件改动&#34;&gt;1.2 文件改动&lt;/h4&gt;

&lt;p&gt;如果想继续修改文件，该如何进行呢？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;open js/main.js&lt;/code&gt; 会使用默认的编辑器打开文件&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;我们在 &lt;code&gt;main.js&lt;/code&gt; 中写入 &lt;code&gt;alert(&amp;quot;小鱼儿的快乐生活&amp;quot;)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;运行  &lt;code&gt;git status -sb&lt;/code&gt; 发现提示中有一个 M&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;## master
M js/main.js
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个 M 的意思就是 &lt;code&gt;Modified&lt;/code&gt; ，表示这个文件被修改了&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;我们接着执行&lt;code&gt;git add 与 git commit -m&lt;/code&gt; 命令&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;再次运行 &lt;code&gt;git status -sb&lt;/code&gt; 会发现没有变更了，所有变动都已经提交到本地仓库里面了。&lt;code&gt;git status -sb&lt;/code&gt; &lt;code&gt;-sb&lt;/code&gt; 的意思就是显示总结和分支。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;1-3-总结&#34;&gt;1.3 总结&lt;/h4&gt;

&lt;p&gt;总结下我们用到的git命令&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;初始化本地仓库 &lt;code&gt;git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git status -sb&lt;/code&gt; 显示当前所有文件的状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add &amp;quot;文件路径&amp;quot;&lt;/code&gt; 用来将变动的添加到暂存区&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;信息&amp;quot;&lt;/code&gt; 用来提交本地 &lt;code&gt;.git&lt;/code&gt; 库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log&lt;/code&gt; 查看变更历史&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;将本地仓库上传到-github&#34;&gt;将本地仓库上传到 GitHub&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;如何将我们本地的仓库上传到 &lt;code&gt;github&lt;/code&gt; 上呢？&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在 &lt;code&gt;GitHub&lt;/code&gt; 上新建一个空仓库，名称随意，一般可以跟本地目录名称一致；
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/7/16bcba8162c51b2d?w=998&amp;amp;h=609&amp;amp;f=png&amp;amp;s=105951&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;按照上述截图，创建一个空的仓库&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;点击创建按钮之后，&lt;code&gt;GitHub&lt;/code&gt; 可以告诉你后续的操作，如图所示：&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;运行以下命令&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git remote add origin git@github.com:XXXXXXXXX/git-demo-01.git&lt;/code&gt; 运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u origin master&lt;/code&gt; , 运行&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;直接在-github-创建一个仓库-然后下载到本地&#34;&gt;直接在 GitHub 创建一个仓库，然后下载到本地&lt;/h4&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;在 &lt;code&gt;GitHub&lt;/code&gt; 上新建一个仓库 &lt;code&gt;git-demo-02&lt;/code&gt; , 这次可以不用创建空仓库了，而是自带 &lt;code&gt;README&lt;/code&gt; 和 &lt;code&gt;Lisence&lt;/code&gt; 的仓库，如下图：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/7/16bcbac73b600f73?w=881&amp;amp;h=636&amp;amp;f=png&amp;amp;s=100898&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;远程仓库创建好了之后，我们可以使用 &lt;code&gt;git clone&lt;/code&gt; 命令进行下载&lt;/li&gt;
&lt;li&gt;如下图所示，获取地址，必须是 &lt;code&gt;ssh&lt;/code&gt;地址哦：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2019/7/7/16bcbad6caca908c?w=1032&amp;amp;h=622&amp;amp;f=png&amp;amp;s=107228&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;打开命令行工具，找需要存放目录的文件夹，运行命令 &lt;code&gt;git clone &amp;quot;地址&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入 &lt;code&gt;clone&lt;/code&gt; 好的目录，运行 &lt;code&gt;ls -la&lt;/code&gt; 就可以看到 &lt;code&gt;.git&lt;/code&gt; 本地仓库了，然后我们就可以使用 &lt;code&gt;git&lt;/code&gt; 命令&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;如何上传更新&#34;&gt;如何上传更新&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;如果我们已经与远程仓库进行了链接，可以一步步运行以下命令就可以上传更新：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add 文件路径&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;info&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd git-demo-01&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch index2.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add index2.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;新建html&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;git-ignore&#34;&gt;git ignore&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;在项目目录创建 &lt;code&gt;.gitignore&lt;/code&gt; 文件就可以指定 「哪些文件不上传到远程仓库」, 比如 &lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;/node_modules/
/.vscode/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就可以避免 &lt;code&gt;node_modules&lt;/code&gt;  和 &lt;code&gt;.vscode&lt;/code&gt; 目录上传到 &lt;code&gt;github&lt;/code&gt;上了， 如果有别的文件夹也不想的话，可以直接在 &lt;code&gt;.gitignore&lt;/code&gt; 添加；&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;上述就是我们平常用到的一些基本 &lt;code&gt;git&lt;/code&gt; 命令，非常简单，当然如果需要应付工作中比较复杂的场景，比如代码冲突等，这些是不够的，所以可以看以下的参考文章进行学习；&lt;/p&gt;

&lt;h2 id=&#34;2019-8-8-更新&#34;&gt;2019.8.8 更新&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git config --global --list&lt;/code&gt; ，查看当前 &lt;code&gt;git&lt;/code&gt; 全局配置；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -v&lt;/code&gt; ，查看当前更改的内容，并在提交时，可以写入详细内容；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reset --hard &#39;版本号&#39;&lt;/code&gt;  ，回退版本，版本号可以在 &lt;code&gt;git log&lt;/code&gt; 命令中查到；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reflog&lt;/code&gt; ，查看版本历史，有回退过的 有之前提交的版本历史等；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch 分支名称&lt;/code&gt; ，新建分支 ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout 分支名称&lt;/code&gt;， 切换分支；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -d 分支名称 分支名称&lt;/code&gt; ，删除分支，删除多个分支，需要以空格分割；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git merge 分支名称&lt;/code&gt;， 合并分支，合并多个分支需要用空格分割；&lt;strong&gt;注意：合并分支是合并两个分支上不同的东西，并不是把 a 分支 合并到 b 分支&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;资源&#34;&gt;资源&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html&#34;&gt;常用 Git 命令清单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2012/08/how_to_read_diff.html&#34;&gt;读懂 diff - 阮一峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&#34;&gt;搭建一个免费的，无限流量的Blog&amp;mdash;-github Pages和Jekyll入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.runoob.com/git/git-install-setup.html&#34;&gt;Git 菜鸟教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743256916071d599b3aed534aaab22a0db6c4e07fd0000&#34;&gt;廖雪峰的 Git 教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>什么是脚本</title>
      <link>https://jinchao1992.github.io/post/%E4%BB%80%E4%B9%88%E6%98%AF%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Sun, 11 Aug 2019 14:22:13 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E4%BB%80%E4%B9%88%E6%98%AF%E8%84%9A%E6%9C%AC/</guid>
      
        <description>

&lt;h3 id=&#34;什么是脚本&#34;&gt;什么是脚本？&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;从一开始学代码时，就有同学跟我说，「我今晚要写个脚本，然后实现一个什么东西。。。」，当时的我一脸懵逼，今天通过一个小小的例子来简单的认识下脚本；&lt;/p&gt;

&lt;p&gt;我们通常把 &lt;code&gt;Javascript&lt;/code&gt; 语言也叫做 「脚本语言」，所谓脚本其实就是，我们给计算机设置好一定的命令和程序，计算机按照我们所说的进行输出，这就是一个脚本。例如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cd ~/Desktop
mkdir test
cd test
echo &#39;您好&#39; &amp;gt; txt.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述命令就是一个脚本。&lt;/p&gt;

&lt;h3 id=&#34;写一个脚本&#34;&gt;写一个脚本&lt;/h3&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;找一个文件目录，后缀名可以随意，但是一般是 &lt;code&gt;.sh&lt;/code&gt; 结尾，我们在桌面上创建&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mkdir test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd test&lt;/code&gt; 必须进入你所创建的目录哦&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch demo.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;编辑 &lt;code&gt;demo.txt&lt;/code&gt; 内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir demo
cd demo
mkdir js css
touch index.html css/style.css js/main.js
exit
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;mv demo.txt demo.sh&lt;/code&gt; 修改后缀名为 &lt;code&gt;.sh&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;mac 用户需要给 &lt;code&gt;demo.txt&lt;/code&gt; 添加执行权限 &lt;code&gt;chmod +x demo.txt&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在任意位置运行 &lt;code&gt;sh ~/Desktop/demo.sh&lt;/code&gt; 即可运行脚本&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果运行完成的话，我们可以看到在运行的目录里会多出一个 &lt;code&gt;demo&lt;/code&gt; 的文件目录，那么刚才我们写的就是一个 &lt;code&gt;Bash&lt;/code&gt; 脚本了。&lt;/p&gt;

&lt;h3 id=&#34;什么是-path&#34;&gt;什么是 PATH ？&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;PATH 的作用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们平时在输入命令时（如：ls 、 cp、cd），&lt;code&gt;Bash&lt;/code&gt; 都会去 &lt;code&gt;PATH&lt;/code&gt; 列表里面寻找对应的文件，如果找到了就执行；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;type 命令&lt;/code&gt; 可以看到寻找过程&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;which 命令&lt;/code&gt; 可以看到寻找的结果&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;把刚刚创建的demo命令添加到-path&#34;&gt;把刚刚创建的demo命令添加到 PATH&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd ~/Desktop&lt;/code&gt;  &lt;code&gt;pwd&lt;/code&gt; 得到一个路径&lt;/li&gt;
&lt;li&gt;创建 &lt;code&gt;~/.bashrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;编辑 &lt;code&gt;~/.bashrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;写入 &lt;code&gt;export PATH=&amp;quot;刚刚我们获取的路径:$PATH&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;运行 &lt;code&gt;source ~/.bashrc&lt;/code&gt; 配置生效&lt;/li&gt;
&lt;li&gt;之前我们运行的 &lt;code&gt;sh ~/Desktop/demo.sh&lt;/code&gt; 现在只需要运行 &lt;code&gt;demo.sh&lt;/code&gt; 就可以了。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参数&#34;&gt;参数&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;我们刚刚也只能创建一个叫 &lt;code&gt;demo&lt;/code&gt; 的目录，目录名字是固定的，如果我们想创建不同的目录名字怎么写脚本呢？好了我们现在来修改下 &lt;code&gt;demo.sh&lt;/code&gt;里的内容&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;start ~/Desktop/demo.sh&lt;/code&gt; mac 需要用 &lt;code&gt;open ~/Desktop/demo.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir $1
cd $1
mkdir css js
touch index.html css/style.css js/main.js
exit
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;$1&lt;/code&gt; 代表第一个参数，这样我们就可以用 &lt;code&gt;demo.sh aaa&lt;/code&gt; 创建一个叫 &lt;code&gt;aaa&lt;/code&gt; 的文件夹了；&lt;/p&gt;

&lt;h3 id=&#34;判断目录是否存在&#34;&gt;判断目录是否存在&lt;/h3&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;if [ -d $1 ]; then
   echo &#39;目录已经存在&#39;
   exit
else 
  mkdir $1
  cd $1
  mkdir css js
  touch index.html css/style.css js/main.js
  echo &#39;success&#39;
  exit 
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Bash 语法 if [ -d $1 ]; then&lt;/code&gt; 用来判断当前的目录存在不存在；&lt;/p&gt;

&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;我们简单的学了一下脚本，并写了一个创建文件夹的脚本，如果想要深入的了解 Bash 脚本还是需要我们去百度 去谷歌。&lt;/p&gt;

&lt;p&gt;Node JS 也有相应的脚本语法，等我研究研究再进行总结输出哦~&lt;/p&gt;

&lt;p&gt;我是 靳超 从新学前端，记录自己的点点滴滴；&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>命令行的基本操作</title>
      <link>https://jinchao1992.github.io/post/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 11 Aug 2019 14:21:23 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      
        <description>

&lt;h2 id=&#34;命令行基本操作&#34;&gt;命令行基本操作&lt;/h2&gt;

&lt;p&gt;在进行命令行操作之前，先认识几个单词：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;英文&lt;/th&gt;
&lt;th&gt;中文&lt;/th&gt;
&lt;th&gt;命令简写&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;file&lt;/td&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;make&lt;/td&gt;
&lt;td&gt;制作&lt;/td&gt;
&lt;td&gt;mk&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;remove&lt;/td&gt;
&lt;td&gt;删除&lt;/td&gt;
&lt;td&gt;rm&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;move&lt;/td&gt;
&lt;td&gt;移动&lt;/td&gt;
&lt;td&gt;mv&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;copy&lt;/td&gt;
&lt;td&gt;复制&lt;/td&gt;
&lt;td&gt;cp&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;列表&lt;/td&gt;
&lt;td&gt;ls&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;link&lt;/td&gt;
&lt;td&gt;链接&lt;/td&gt;
&lt;td&gt;ln&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;find&lt;/td&gt;
&lt;td&gt;查找&lt;/td&gt;
&lt;td&gt;find&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;echo&lt;/td&gt;
&lt;td&gt;回声&lt;/td&gt;
&lt;td&gt;echo&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;touch&lt;/td&gt;
&lt;td&gt;触摸&lt;/td&gt;
&lt;td&gt;touch&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;change directory&lt;/td&gt;
&lt;td&gt;改变目录&lt;/td&gt;
&lt;td&gt;cd&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;recursive&lt;/td&gt;
&lt;td&gt;递归的&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;fource&lt;/td&gt;
&lt;td&gt;强制&lt;/td&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;以上就是平时操作的一些基本命令，只要记得住简写，明白其中意思即可，接下来我们把这些命令简写组合在一起，看看会发生那些操作吧。&lt;/p&gt;

&lt;p&gt;我们程序员的宿命其实增删改查，其实命令行呢也是分为增删改查，一一来看：&lt;/p&gt;

&lt;h3 id=&#34;查-查看文件或目录&#34;&gt;查：查看文件或目录&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt; 查看绝对路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt; 查看当前目录内容，如：a 目录下具体有那些目录或者文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls 路径&lt;/code&gt; ，路径可以是绝对路径也可以是相对路径，如：&lt;code&gt;ls a/b/c&lt;/code&gt;  最终查看的是 c 目录下的目录内容，当然 c 是属于 a 目录的“孙子”元素了&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat 路径&lt;/code&gt; ，查看文件内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head 路径&lt;/code&gt; ，查看文件内容头（前10行），可以添加参数 &lt;code&gt;head 5 -n 1.txt&lt;/code&gt; 代表查看前五行内容；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail 路径&lt;/code&gt;，查看文件内容尾部（后9行），可以添加参数 &lt;code&gt;tail 4 -n 1.txt&lt;/code&gt; 代表查看后3行内容，数字减一；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;less 路径&lt;/code&gt; 每次查看一点内容，向上按键或者向下按键进行翻页&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;增-创建文件或目录&#34;&gt;增：创建文件或目录&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;touch 文件名称&lt;/code&gt; ，创建的文件无内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;touch 文件1 文件2 文件3&lt;/code&gt; ， 同时创建多个文件，中间用空格分隔，如果一个文件或者目录有特殊的字符的话，需给文件名加上引号，单引号双引号都可&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo 创建的内容 &amp;gt; 文件名称&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo 追加的内容 &amp;gt;&amp;gt; 文件名称&lt;/code&gt; 追加内容到文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo 内容 &amp;gt;! 文件名称&lt;/code&gt; 强制覆盖&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir&lt;/code&gt; 目录名字 ，创建目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mkdir -p a/b/c/d/e&lt;/code&gt; ，创建多重目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp 旧的文件 新的文件&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp -r 源路径 目标路径&lt;/code&gt;，加上&lt;code&gt;-r&lt;/code&gt; 代表是复制目录&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;删-删除文件或目录&#34;&gt;删：删除文件或目录&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rm 文件名或路径下的文件名&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -r 目录名称或路径&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -r -f 目录&lt;/code&gt; 强制删除目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd 目录&lt;/code&gt; 进入某个目录&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;改-修改文件或者目录&#34;&gt;改：修改文件或者目录&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mv 源路径 目标路径&lt;/code&gt; ，移动文件&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>初始命令行</title>
      <link>https://jinchao1992.github.io/post/%E5%88%9D%E5%A7%8B%E5%91%BD%E4%BB%A4%E8%A1%8C/</link>
      <pubDate>Sun, 11 Aug 2019 14:20:13 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E5%88%9D%E5%A7%8B%E5%91%BD%E4%BB%A4%E8%A1%8C/</guid>
      
        <description>

&lt;h3 id=&#34;命令行速记&#34;&gt;命令行速记&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;创建目录  &lt;code&gt;mkdir  &amp;quot;目录名字&amp;quot;&lt;/code&gt;， 目录名字可以不加引号，也可加，假如目录是有特殊标记的，比如带空格的名字，需要添加引号；&lt;/li&gt;
&lt;li&gt;进入目录 &lt;code&gt;cd  &amp;quot;目录名字&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt; 显示当前所在目录的绝对路径&lt;/li&gt;
&lt;li&gt;创建目标路径，&lt;code&gt;mkdir -p 目录路径&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;如想在想在 &lt;code&gt;demo01&lt;/code&gt; 下创建一个 &lt;code&gt;demo-02&lt;/code&gt; 的目录，两种方法 一种是通过 &lt;code&gt;mkdir&lt;/code&gt; 先创建 &lt;code&gt;demo01&lt;/code&gt; 再在 &lt;code&gt;demo01&lt;/code&gt; 里创建 &lt;code&gt;demo02&lt;/code&gt; ，另一种 &lt;code&gt;mkdir -p /demo01/demo02&lt;/code&gt; 就可以；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whoami&lt;/code&gt; 查询当前用户&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;查看当前文件路径 &lt;code&gt;ls 路径&lt;/code&gt;， 路径就是单独要跳转到那个目录下，如果不加就是当前的&lt;/li&gt;
&lt;li&gt;查看路径(包含隐藏路径) &lt;code&gt;ls -a 路径&lt;/code&gt;，包含 &lt;code&gt;.&lt;/code&gt; 与 &lt;code&gt;..&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看路径，包含详细信息 &lt;code&gt;ls -l&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -al&lt;/code&gt; 查看路径详细信息，包括隐藏目录和隐藏文件；&lt;/li&gt;
&lt;li&gt;创建文件 &lt;code&gt;echo &#39;文件内容&#39; &amp;gt; 文件路径&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;强制创建文件 &lt;code&gt;echo &#39;文件内容&#39; &amp;gt;!文件路径&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;追加文件内容 &lt;code&gt;echo &amp;quot;文件内容&amp;quot; &amp;gt;&amp;gt; 文件路径&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;创建文件 &lt;code&gt;touch 文件名&lt;/code&gt;, 与 &lt;code&gt;echo&lt;/code&gt; 的区别在于，&lt;code&gt;echo&lt;/code&gt; 可以优先书写内容，&lt;code&gt;touch&lt;/code&gt; 如果创建同名文件的话，会替换，且会更新文件的创建时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat&lt;/code&gt; 完整的显示整个文件&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;复制文件 &lt;strong&gt;是复制，不是剪切&lt;/strong&gt; &lt;code&gt;cp 源路径 目标路径&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;复制目录 &lt;code&gt;cp -r 源路径 目标路径&lt;/code&gt;， 复制目录会递归的复制；&lt;/li&gt;
&lt;li&gt;移动节点 &lt;code&gt;mv 源路径 目标路径&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;删除文件 &lt;code&gt;rm 文件路径&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;强制删除文件 &lt;code&gt;rm -f 文件路径&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除目录 &lt;code&gt;rm -rf 目录路径&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;下载文件 &lt;code&gt;curl -L &amp;quot;链接地址&amp;quot; &amp;gt; &#39;文件本地名称&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;磁盘占用 &lt;code&gt;df -kh&lt;/code&gt; 查看磁盘被占用了多少&lt;/li&gt;
&lt;li&gt;当前目录大小 &lt;code&gt;du -sh .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看各个文件的大小 &lt;code&gt;du -h&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上的命令，只是我们平时常用到的命令，如果我们想要学习更多的命令还需要我们自行查阅，&lt;a href=&#34;https://www.runoob.com/linux/linux-comm-cat.html&#34;&gt;Linux常用命令&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;如果我们不知道一个命令的具体意思，也可到此网站上查看，命令的具体介绍，&lt;a href=&#34;https://explainshell.com/&#34;&gt;https://explainshell.com&lt;/a&gt;，只需要在搜索框里输入查询的命令，即可把命令具体意思展示出来，当然是英文的啦(！！！表示是英语学渣一个，还是得借助翻译才可)&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>计算机是怎么工作的</title>
      <link>https://jinchao1992.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84/</link>
      <pubDate>Sun, 11 Aug 2019 14:18:09 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84/</guid>
      
        <description>

&lt;h3 id=&#34;为什么要学习计算机基础&#34;&gt;为什么要学习计算机基础&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;因为你首先是程序员，其次才是前端&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;硬件与软件：计算机的运行原理 (《&lt;a href=&#34;https://book.douban.com/subject/4822685/&#34;&gt;编码&lt;/a&gt;》)&lt;/li&gt;
&lt;li&gt;最大的软件： 操作系统&lt;/li&gt;
&lt;li&gt;自己写的软件：数据结构 &amp;amp; 算法 (《数据结构与算法分析》) (排序算法)&lt;/li&gt;
&lt;li&gt;多人写软件：软件工程 (《代码大全》)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;前端为什么要学习计算机基础&#34;&gt;前端为什么要学习计算机基础&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;操作系统&lt;/code&gt;运行在&lt;code&gt;硬件&lt;/code&gt;上；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;浏览器&lt;/code&gt;运行在&lt;code&gt;操作系统&lt;/code&gt;上；&lt;/li&gt;
&lt;li&gt;HL/CSS/JS 运行在&lt;code&gt;浏览器&lt;/code&gt;里；&lt;/li&gt;
&lt;li&gt;HTML/CSS/JS 和&lt;code&gt;数据&lt;/code&gt;都运行在&lt;code&gt;服务器&lt;/code&gt;上；&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;计算机就是一个二进制的世界-0和1&#34;&gt;计算机就是一个二进制的世界(0和1)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1代表充电成功，0代表不充电&lt;/li&gt;
&lt;li&gt;十进制转换二进制，以10的&lt;code&gt;几次方&lt;/code&gt;为底，转换为&lt;code&gt;2的几次方为底&lt;/code&gt;;比如：

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;37&lt;/code&gt; 十进制的做法是 3&lt;code&gt;*&lt;/code&gt;10^1 + 7&lt;code&gt;*&lt;/code&gt;10^0 = 37;&lt;/li&gt;
&lt;li&gt;转换二进制则为：1&lt;code&gt;*&lt;/code&gt;2^5 + 0&lt;code&gt;*&lt;/code&gt;2^4 + 0&lt;code&gt;*&lt;/code&gt;2^3 + 1&lt;code&gt;*&lt;/code&gt;2^2 + 0&lt;code&gt;*&lt;/code&gt;2^1 + 1&lt;code&gt;*&lt;/code&gt;2^0 所以为：&lt;code&gt;100101&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;切记二进制里只有0和1没有别的存在；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;计算机存储&#34;&gt;计算机存储&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;内存如何存储 0 和 1，1 代表充电 0 代表不充电；&lt;/li&gt;
&lt;li&gt;如何存储数字，十进制变化为二进制，进行存储；

&lt;ul&gt;
&lt;li&gt;负数会以&lt;code&gt;补码&lt;/code&gt;的方式进行存储；&lt;/li&gt;
&lt;li&gt;小数会以&lt;code&gt;浮点数&lt;/code&gt;的形式进行存储；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;如何存储字符, 将每个字符编号，通过&lt;strong&gt;&lt;code&gt;ASCll&lt;/code&gt;&lt;/strong&gt; 美国信息交换标准代码，如下图：
&lt;img src=&#34;https://jrg-team.github.io/jrg-tasks/lessons/%E7%BC%96%E7%A8%8B%E5%88%9D%E7%BA%A7/ascii.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​如果想存储 a，那么就存储97(十进制)对应的二进制，a -&amp;gt; 0110 0001(2) -&amp;gt; 61(16)；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何存储中文，通过&lt;code&gt;GB 2312&lt;/code&gt; 中国国家标准简体中文字符集，后微软推出 &lt;code&gt;GBK&lt;/code&gt;字符集;&lt;/li&gt;
&lt;li&gt;如何存储所以字符，衍生出  &lt;code&gt;Unicode&lt;/code&gt;字符集，可以存储中日韩文字、藏文、盲文、锲行文字、颜文字等；&lt;/li&gt;
&lt;li&gt;如何将 Unicode 存储到计算机里，高性价比 UTF-8，UTF-8 是一种编码方式，不是字符集；&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>我的博客</title>
      <link>https://jinchao1992.github.io/post/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 11 Aug 2019 10:42:41 +0800</pubDate>
      
      <guid>https://jinchao1992.github.io/post/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      
        <description>

&lt;h1 id=&#34;大家好&#34;&gt;大家好&lt;/h1&gt;

&lt;p&gt;我的博客已经开通了，欢迎大家来我的小站。&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
